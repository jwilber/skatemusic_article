/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _lodash = __webpack_require__(1);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _isMobile = __webpack_require__(3);\n\nvar _isMobile2 = _interopRequireDefault(_isMobile);\n\nvar _graphic = __webpack_require__(4);\n\nvar _graphic2 = _interopRequireDefault(_graphic);\n\nvar _joyplot = __webpack_require__(5);\n\nvar _joyplot2 = _interopRequireDefault(_joyplot);\n\nvar _bubbles = __webpack_require__(6);\n\nvar _bubbles2 = _interopRequireDefault(_bubbles);\n\nvar _waffle = __webpack_require__(7);\n\nvar _waffle2 = _interopRequireDefault(_waffle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// D3 is included by globally by default\nvar bodySel = d3.select('body');\nvar previousWidth = 0;\n\nfunction resize() {\n\tvar width = bodySel.node().offsetWidth;\n\tif (previousWidth !== width) {\n\t\tpreviousWidth = width;\n\t\t_graphic2.default.resize();\n\t}\n}\n\nfunction init() {\n\t// add mobile class to body tag\n\tbodySel.classed('is-mobile', _isMobile2.default.any());\n\t// setup resize event\n\twindow.addEventListener('resize', (0, _lodash2.default)(resize, 150));\n\t// kick off graphic code\n\t// graphic.init();\n\t//\n\t// //joyplot enter\n\t_joyplot2.default.init();\n\t//\n\t// //new_test enter\n\t_bubbles2.default.init();\n\t//\n\t// //waffle chart\n\t_waffle2.default.init();\n}\n\ninit();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvZW50cnkuanM/YjE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEMyBpcyBpbmNsdWRlZCBieSBnbG9iYWxseSBieSBkZWZhdWx0XHJcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2guZGVib3VuY2UnO1xyXG5pbXBvcnQgaXNNb2JpbGUgZnJvbSAnLi91dGlscy9pcy1tb2JpbGUnO1xyXG5pbXBvcnQgZ3JhcGhpYyBmcm9tICcuL2dyYXBoaWMnO1xyXG5pbXBvcnQgam95cGxvdCBmcm9tICcuL2pveXBsb3QnO1xyXG5pbXBvcnQgYnViYmxlcyBmcm9tICcuL2J1YmJsZXMnO1xyXG5pbXBvcnQgd2FmZmxlIGZyb20gJy4vd2FmZmxlJztcclxuXHJcbmNvbnN0IGJvZHlTZWwgPSBkMy5zZWxlY3QoJ2JvZHknKTtcclxubGV0IHByZXZpb3VzV2lkdGggPSAwO1xyXG5cclxuZnVuY3Rpb24gcmVzaXplKCkge1xyXG5cdGNvbnN0IHdpZHRoID0gYm9keVNlbC5ub2RlKCkub2Zmc2V0V2lkdGg7XHJcblx0aWYgKHByZXZpb3VzV2lkdGggIT09IHdpZHRoKSB7XHJcblx0XHRwcmV2aW91c1dpZHRoID0gd2lkdGg7XHJcblx0XHRncmFwaGljLnJlc2l6ZSgpO1xyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdCgpIHtcclxuXHQvLyBhZGQgbW9iaWxlIGNsYXNzIHRvIGJvZHkgdGFnXHJcblx0Ym9keVNlbC5jbGFzc2VkKCdpcy1tb2JpbGUnLCBpc01vYmlsZS5hbnkoKSk7XHJcblx0Ly8gc2V0dXAgcmVzaXplIGV2ZW50XHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKHJlc2l6ZSwgMTUwKSk7XHJcblx0Ly8ga2ljayBvZmYgZ3JhcGhpYyBjb2RlXHJcblx0Ly8gZ3JhcGhpYy5pbml0KCk7XHJcblx0Ly9cclxuXHQvLyAvL2pveXBsb3QgZW50ZXJcclxuXHRqb3lwbG90LmluaXQoKTtcclxuXHQvL1xyXG5cdC8vIC8vbmV3X3Rlc3QgZW50ZXJcclxuXHRidWJibGVzLmluaXQoKVxyXG5cdC8vXHJcblx0Ly8gLy93YWZmbGUgY2hhcnRcclxuXHR3YWZmbGUuaW5pdCgpXHJcblxyXG59XHJcblxyXG5pbml0KCk7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvanMvZW50cnkuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7Ozs7QUFQQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// device sniffing for mobile\n\nvar isMobile = {\n\tandroid: function android() {\n\t\treturn navigator.userAgent.match(/Android/i);\n\t},\n\n\tblackberry: function blackberry() {\n\t\treturn navigator.userAgent.match(/BlackBerry/i);\n\t},\n\n\tios: function ios() {\n\t\treturn navigator.userAgent.match(/iPhone|iPad|iPod/i);\n\t},\n\n\topera: function opera() {\n\t\treturn navigator.userAgent.match(/Opera Mini/i);\n\t},\n\n\twindows: function windows() {\n\t\treturn navigator.userAgent.match(/IEMobile/i);\n\t},\n\n\tany: function any() {\n\t\treturn isMobile.android() || isMobile.blackberry() || isMobile.ios() || isMobile.opera() || isMobile.windows();\n\t}\n};\n\nexports.default = isMobile;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvdXRpbHMvaXMtbW9iaWxlLmpzPzY1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGV2aWNlIHNuaWZmaW5nIGZvciBtb2JpbGVcclxuXHJcbmNvbnN0IGlzTW9iaWxlID0ge1xyXG5cdGFuZHJvaWQ6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSksXHJcblxyXG5cdGJsYWNrYmVycnk6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0JsYWNrQmVycnkvaSksXHJcblxyXG5cdGlvczogKCkgPT4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBob25lfGlQYWR8aVBvZC9pKSxcclxuXHJcblx0b3BlcmE6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL09wZXJhIE1pbmkvaSksXHJcblxyXG5cdHdpbmRvd3M6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0lFTW9iaWxlL2kpLFxyXG5cclxuXHRhbnk6ICgpID0+IChcclxuXHRcdGlzTW9iaWxlLmFuZHJvaWQoKSB8fFxyXG5cdFx0aXNNb2JpbGUuYmxhY2tiZXJyeSgpIHx8XHJcblx0XHRpc01vYmlsZS5pb3MoKSB8fFxyXG5cdFx0aXNNb2JpbGUub3BlcmEoKSB8fFxyXG5cdFx0aXNNb2JpbGUud2luZG93cygpXHJcblx0KSxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgaXNNb2JpbGVcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9qcy91dGlscy9pcy1tb2JpbGUuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQVhBO0FBQ0E7QUFtQkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// D3 is included by globally by default\n\nfunction resize() {}\n\nfunction init() {\n\t// console.log('Make somethingjk!');\n}\n\nexports.default = { init: init, resize: resize };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvZ3JhcGhpYy5qcz8xZTZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEQzIGlzIGluY2x1ZGVkIGJ5IGdsb2JhbGx5IGJ5IGRlZmF1bHRcclxuXHJcbmZ1bmN0aW9uIHJlc2l6ZSgpIHt9XHJcblxyXG5mdW5jdGlvbiBpbml0KCkge1xyXG5cdC8vIGNvbnNvbGUubG9nKCdNYWtlIHNvbWV0aGluZ2prIScpO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7IGluaXQsIHJlc2l6ZSB9O1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2dyYXBoaWMuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction resize() {}\n\nfunction testStoryCode() {\n    var container = d3.select('#scroll');\n    var graphic = container.select('.scroll__graphic');\n    var chart = graphic.select('.chart');\n    var text = container.select('.scroll__text');\n    var step = text.selectAll('.step');\n\n    var margin = { top: 0, right: 10, bottom: 50, left: 150 },\n        width = d3.select('div.chart').node().offsetWidth - margin.left - margin.right;\n    console.log(width);\n    // xScale\n    var xScale = d3.scaleTime().domain([new Date(1977, 0, 1), new Date(2029, 0, 1)]).range([0, width]);\n\n    var scroller = scrollama();\n\n    // generic window resize listener event\n    function handleResize() {}\n\n    // scrollama event handlers\n    function handleStepEnter(_ref) {\n        var element = _ref.element,\n            direction = _ref.direction,\n            index = _ref.index;\n\n\n        var response = { element: element, direction: direction, index: index };\n        var dataYear = response.element.dataset.year;\n        var conv_date = new Date(dataYear);\n\n        d3.selectAll('rect#maskRect').transition().duration(2500).attr('x', function (d) {\n            return xScale(conv_date);\n        });\n    }\n    function handleContainerEnter(response) {\n        // response = { direction }\n        // sticky the graphic (old school)\n        graphic.classed('is-fixed', true);\n        graphic.classed('is-bottom', false);\n    }\n    function handleContainerExit(response) {\n        // response = { direction }\n        // un-sticky the graphic, and pin to top/bottom of container\n        graphic.classed('is-fixed', false);\n        graphic.classed('is-bottom', response.direction === 'down');\n    }\n\n    function init() {\n        // 1. force a resize on load to ensure proper dimensions are sent to scrollama\n        handleResize();\n        // 2. setup the scroller passing options\n        // this will also initialize trigger observations\n        // 3. bind scrollama event handlers (this can be chained like below)\n        scroller.setup({\n            container: '#scroll',\n            graphic: '.scroll__graphic',\n            text: '.scroll__text',\n            step: '.scroll__text .step',\n            debug: false, // uncomment to have interactive debug\n            offset: .5\n        }).onStepEnter(handleStepEnter).onContainerEnter(handleContainerEnter).onContainerExit(handleContainerExit);\n        // setup resize event\n        window.addEventListener('resize', handleResize);\n    }\n    // kick things off\n    init();\n}\n\nfunction init() {\n\n    var windowHeight = Math.max(document.documentElement.clientHeight / 1.8, window.innerHeight / 1.8 || 0);\n\n    var margin = { top: 0, right: 10, bottom: 50, left: 150 },\n        width = d3.select('div.chart').node().offsetWidth - margin.left - margin.right,\n        height = windowHeight - margin.top - margin.bottom;\n\n    var svg = d3.selectAll('.joyplot').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // NEED TO FIGURE THIS OUT\n    var formatTime = d3.timeFormat('%Y');\n\n    // Function to return d.time\n    var x = function x(d) {\n        return d.time;\n    };\n\n    // xScale\n    var xScale = d3.scaleTime().range([0, width]);\n    var xValue = function xValue(d) {\n        return xScale(x(d));\n    };\n    var xAxis = d3.axisBottom(xScale).tickFormat(formatTime).ticks(10);\n\n    var y = function y(d) {\n        return d.value;\n    };\n    var yScale = d3.scaleLinear();\n    var yValue = function yValue(d) {\n        return yScale(y(d)) + 10;\n    };\n\n    var genre = function genre(d) {\n        return d.key;\n    };\n    var genreScale = d3.scaleBand().range([0, height]);\n    var genreValue = function genreValue(d) {\n        return genreScale(genre(d));\n    };\n\n    var genreAxis = d3.axisLeft(genreScale);\n\n    var area = d3.area().x(xValue).y1(yValue);\n\n    var line = area.lineY1();\n\n    var parseTime = d3.timeParse('%Y');\n\n    function row(d) {\n        return {\n            activity: d.activity,\n            time: parseTime(+d.time),\n            value: +d.p_smooth\n        };\n    }\n\n    d3.tsv('assets/cities.tsv', row, function (error, dataFlat) {\n\n        if (error) throw error;\n        // Sort x-axis by time\n        dataFlat.sort(function (a, b) {\n            return a.time - b.time;\n        });\n\n        var data = d3.nest().key(function (d) {\n            return d.activity;\n        }).entries(dataFlat);\n\n        // Place activities based in order of max peak time\n        function peakTime(d) {\n            var i = d3.scan(d.values, function (a, b) {\n                return y(a) - y(b);\n            });\n            return d.values[i].time;\n        };\n\n        // Sort activities by use\n        var genreDomain = [\"Indie/Alternative\", \"Hip Hop\", \"Punk\", \"Classic Rock\", \"Jazz/Soul\", \"Other\", \"Electronic\", \"Metal\", \"Rock\"];\n\n        data.sort(function (a, b) {\n            return genreDomain.indexOf(a.key) - genreDomain.indexOf(b.key);\n        });\n\n        // data.sort(function(a, b) { return peakTime(a) - peakTime(b); });\n\n        xScale.domain(d3.extent(dataFlat, x));\n\n        console.log(d3.extent(dataFlat, x));\n        // var ttt = xScale.invert(400);\n        // var tttt = xScale(ttt);\n        // console.log(tttt);\n        // console.log(ttt);\n        // console.log(ttt == \"Mon Jan 19 2009 00:13:18 GMT-0700 (US Mountain Standard Time)\");\n        // console.log(x(\"Mon Jan 19 2009 00:13:18 GMT-0700 (US Mountain Standard Time)\"));\n        // console.log(xValue(x(\"Mon Jan 19 2009 00:13:18 GMT-0700 (US Mountain Standard Time)\")));\n        genreScale.domain(genreDomain);\n        // genreScale.domain(data.map(function(d) { return d.key; }));\n\n        var overlap = 3;\n        var areaChartHeight = (1 + overlap) * (height / genreScale.domain().length);\n\n        yScale.domain(d3.extent(dataFlat, y)).range([areaChartHeight, 0]);\n\n        area.y0(yScale(0));\n\n        // svg.append('g')\n        //     .attr('class', 'axis axis--activity')\n        //     .attr('transform', 'translate(0,' + 0 + ')')\n        //     .call(genreAxis);\n\n        // // set y-axis labels\n        var gGenre = svg.append('g').attr('class', 'activities').selectAll('.activity').data(data).enter().append('g').attr('class', function (d) {\n            return 'activity activity--' + d.key;\n        }).attr('transform', function (d) {\n            // var ty = genreValue(d) - genreScale.bandwidth();\n            var ty = genreValue(d) - Math.round(areaChartHeight);\n            return 'translate(0,' + ty + ')';\n        });\n\n        gGenre.append('g').attr('transform', function (d) {\n            // var ty = 2 * genreScale.bandwidth();\n            var ty = Math.round(areaChartHeight) + genreScale.domain().length * 1.5;\n            return 'translate(0,' + ty + ')';\n        }).append('text').html(function (d) {\n            return d.key;\n        }).attr('fill', 'white').attr(\"text-anchor\", \"end\");\n\n        gGenre.append('path').attr('class', 'area').datum(function (d) {\n            return d.values;\n        }).filter(function (d) {\n            var tt = d.filter(function (d) {\n                return formatTime(d.time) < 1995;\n            });\n            return tt;\n        }).attr('d', area);\n\n        gGenre.append('path').attr('class', 'line').datum(function (d) {\n            return d.values;\n        }).attr('d', line).attr('stroke', 'white').style('opacity', 1);\n\n        //\n        gGenre.append('rect').attr('width', d3.select('div.joyplot').node().offsetWidth).attr('height', d3.select('div.chart').node().offsetHeight) // was divided by 2.7 => bad\n        .attr('fill', 'black').attr('id', 'maskRect').attr('opacity', 1);\n\n        svg.append('g').attr('class', 'axis axis--x').attr('transform', 'translate(0,' + height + ')').call(xAxis).selectAll(\"text\").attr(\"y\", 13);\n\n        // Remove years in x-axis for which no data actually exists\n        d3.selectAll(\".tick text\").each(function (d, i) {\n            if (i == 9 | i == 10 | i == 18) {\n                d3.select(this).attr('visibility', 'hidden');\n            }\n        });\n\n        d3.selectAll('.tick').each(function (d, i) {\n            if (i == 9 | i == 10 | i == 18) {\n                d3.select(this).attr('visibility', 'hidden');\n            }\n        });\n\n        d3.select('svg').append('text').attr('class', 'joytitle').attr('x', width / 2).attr('y', 10).attr('fill', 'white').style('font-size', '40px').text('title');\n    });\n\n    testStoryCode();\n}\n\nexports.default = { init: init, resize: resize };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction resize() {}\n\nfunction init() {\n  /* bubbleChart creation function.\r\n   *\r\n   */\n\n  function floatingTooltip(tooltipId, width) {\n    // Local variable to hold tooltip div for\n    // manipulation in other functions.\n    var tt = d3v3.select('body').append('div').attr('class', 'tooltip').attr('id', tooltipId).style('pointer-events', 'none');\n\n    // Set a width if it is provided.\n    if (width) {\n      tt.style('width', width);\n    }\n\n    // Initially it is hidden.\n    hideTooltip();\n\n    /*\r\n     * Display tooltip with provided content.\r\n     *\r\n     * content is expected to be HTML string.\r\n     *\r\n     * event is d3v3.event for positioning.\r\n     */\n    function showTooltip(content, event) {\n      tt.style('opacity', 1.0).html(content);\n\n      updatePosition(event);\n    }\n\n    /*\r\n     * Hide the tooltip div.\r\n     */\n    function hideTooltip() {\n      tt.style('opacity', 0.0);\n    }\n\n    /*\r\n     * Figure out where to place the tooltip\r\n     * based on d3v3 mouse event.\r\n     */\n    function updatePosition(event) {\n      var xOffset = 20;\n      var yOffset = 10;\n\n      var ttw = tt.style('width');\n      var tth = tt.style('height');\n\n      var wscrY = window.scrollY;\n      var wscrX = window.scrollX;\n\n      var curX = document.all ? event.clientX + wscrX : event.pageX;\n      var curY = document.all ? event.clientY + wscrY : event.pageY;\n      var ttleft = curX - wscrX + xOffset * 2 + ttw > window.innerWidth ? curX - ttw - xOffset * 2 : curX + xOffset;\n\n      if (ttleft < wscrX + xOffset) {\n        ttleft = wscrX + xOffset;\n      }\n\n      var tttop = curY - wscrY + yOffset * 2 + tth > window.innerHeight ? curY - tth - yOffset * 2 : curY + yOffset;\n\n      if (tttop < wscrY + yOffset) {\n        tttop = curY + yOffset;\n      }\n\n      tt.style({ top: tttop + 'px', left: ttleft + 'px' });\n    }\n\n    return {\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      updatePosition: updatePosition\n    };\n  }\n\n  /* bubbleChart creation function.\r\n   *\r\n   */\n  function bubbleChart() {\n    // Constants for sizing\n    var searchBar = d3v3.select('.SearchBar');\n\n    var margin = { top: 20, bottom: 20, left: 50, right: 20 };\n    // var width = 1500 - margin.right;\n    // var height = 1000 - margin.top - margin.bottom;\n    // var boundingRect = d3.select('#vis').node().getBoundingClientRect();\n    var width = window.innerWidth - margin.left - margin.right;\n    var height = window.innerHeight;\n    var width = 1100;\n    var height = 1050;\n\n    console.log('width', width);\n    console.log('height', height);\n\n    // tooltip for mouseover functionality\n    var tooltip = floatingTooltip('bubble_tooltip', 240);\n\n    // Locations to move bubbles towards, depending\n    // on which view mode is selected.\n    var center = { x: width / 2, y: height / 2 };\n\n    var selbubbles = [];\n\n    var popScale = d3.scaleOrdinal().domain(['low', 'medium', 'high']).range([width / 3.5, width / 2, width / 1.4]);\n\n    var genereXScale = d3.scaleBand().domain(['1', '2', '3', '4'])\n    // .range([width, width, (width / 2.75), (width / 2.7), (width / 1.9), (width / 1.9), (width / 1.55), (width / 1.55), (width / 1.55)]);\n    .range([width / 4, width - margin.right]);\n\n    var useCenters = {\n      'low': { x: popScale('low'), y: height / 2.5 }, //width / 4\n      'medium': { x: popScale('medium'), y: height / 2.5 }, //width / 2.75\n      'high': { x: popScale('high'), y: height / 2.5 //width / 1.5\n      } };\n\n    // X locations of the year titles.\n    var useTitleX = {\n      'Low': popScale('low') - margin.right * 2, //width / 6,\n      'Medium': popScale('medium'), //width / 2.3,\n      'High': popScale('high') + margin.right * 2 //width / 1.35\n    };\n\n    var genreCenters = {\n      'Classic Rock': { x: genereXScale('1') + margin.left * .8, y: height / 3.5 },\n      'Indie/Alternative': { x: genereXScale('1') + margin.left * .8, y: height / 2 },\n      'Hip Hop': { x: genereXScale('2'), y: height / 3.5 },\n      'Electronic': { x: genereXScale('2'), y: height / 2 },\n      'Punk': { x: genereXScale('3'), y: height / 3.5 },\n      'Metal': { x: genereXScale('3'), y: height / 2 },\n      'Other': { x: genereXScale('4') - margin.right * 4, y: height / 3.5 },\n      'Jazz/Soul': { x: genereXScale('4') - margin.right * 4, y: height / 2 },\n      'Rock': { x: genereXScale('4') - margin.right * 4, y: height / 2 }\n    };\n\n    // X locations of the year titles.\n    var genreTitleX = {\n      'Classic Rock': genereXScale('1') - margin.left * 2,\n      'Indie/Alternative': genereXScale('1') - margin.left * 2,\n      'Hip Hop': genereXScale('2'),\n      'Electronic': genereXScale('2'),\n      'Punk': genereXScale('3') + margin.right * 4,\n      'Metal': genereXScale('3') + margin.right * 4,\n      'Other': genereXScale('4') + margin.right * 4,\n      'Jazz/Soul': genereXScale('4') + margin.right * 4\n\n    };\n\n    // Y locations of the year titles.\n    var genreTitleY = {\n      'Classic Rock': height - (height - margin.top * 2),\n      'Indie/Alternative': height / 2.4,\n      'Hip Hop': height - (height - margin.top * 2),\n      'Electronic': height / 2.4,\n      'Punk': height - (height - margin.top * 2),\n      'Metal': height / 2.4,\n      'Other': height - (height - margin.top * 2),\n      'Jazz/Soul': height / 2.4\n\n    };\n\n    // Used when setting up force and\n    // moving around nodes\n    var damper = 0.102;\n\n    // These will be set in create_nodes and create_vis\n    var svg = null;\n    var bubbles = null;\n    var nodes = [];\n\n    var text = [];\n\n    function charge(d) {\n      return -Math.pow(d.radius, 2.0) / 7.7;\n    }\n\n    var force = d3v3.layout.force().size([width, height]).charge(charge).gravity(-0.011).friction(0.9);\n\n    var fillColor2 = d3v3.scale.ordinal().domain(['Classic Rock', 'Punk', 'Indie/Alternative', 'Metal', 'Hip Hop', 'Electronic', 'Jazz/Soul']).range(['#fbb4ae', '#fddaec', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#b3cde3', '#f2f2f2']);\n\n    // Nice looking colors - no reason to buck the trend\n    var fillColor = d3v3.scale.ordinal().domain(['low', 'medium', 'high']).range(['red', 'red', '#b2e2e2']);\n\n    // Sizes bubbles based on their area instead of raw radius\n    var radiusScale = d3v3.scale.pow().exponent(2.1) // exponent makes the graph 'tighter'\n    .range([8, 70]);\n\n    /*\r\n     * This data manipulation function takes the raw data from\r\n     * the CSV file and converts it into an array of node objects.\r\n     * Each node will store data and visualization values to visualize\r\n     * a bubble.\r\n     *\r\n     * rawData is expected to be an array of data objects, read in from\r\n     * one of d3v3's loading functions like d3v3.csv.\r\n     *\r\n     * This function returns the new node array, with a node in that\r\n     * array for each element in the rawData input.\r\n     */\n    function createNodes(rawData) {\n      // Use map() to convert raw data into node data.\n      // Checkout http://learnjsdata.com/ for more on\n      // working with data.\n      var myNodes = rawData.map(function (d) {\n        return {\n          id: d.id,\n          radius: radiusScale(+d.tote),\n          value: d.tote,\n          name: d.artist,\n          org: d.organization,\n          group: d.group,\n          genre: d.genre,\n          year: d.year,\n          x: +genreCenters[d.genre].x, //900,\n          y: Math.random() * +genreCenters[d.genre].y\n        };\n      });\n\n      // sort them to prevent occlusion of smaller nodes.\n      myNodes.sort(function (a, b) {\n        return b.value - a.value;\n      });\n\n      return myNodes;\n    }\n\n    /*\r\n     * Main entry point to the bubble chart. This function is returned\r\n     * by the parent closure. It prepares the rawData for visualization\r\n     * and adds an svg element to the provided selector and starts the\r\n     * visualization creation process.\r\n     *\r\n     * selector is expected to be a DOM element or CSS selector that\r\n     * points to the parent element of the bubble chart. Inside this\r\n     * element, the code will add the SVG continer for the visualization.\r\n     *\r\n     * rawData is expected to be an array of data objects as provided by\r\n     * a d3v3 loading function like d3v3.csv.\r\n     */\n    var chart = function chart(selector, rawData) {\n      // Use the max total_amount in the data as the max in the scale's domain\n      // note we have to ensure the total_amount is a number by converting it\n      // with `+`.\n      var maxAmount = d3v3.max(rawData, function (d) {\n        return +d.tote;\n      });\n      radiusScale.domain([0, maxAmount]);\n\n      rawData.sort(function (a, b) {\n        return b.value - a.value;\n      });\n\n      nodes = createNodes(rawData);\n      // Set the force's nodes to our newly created nodes array.\n      force.nodes(nodes);\n\n      // Create a SVG element inside the provided selector\n      // with desired size.\n      svg = d3v3.select(selector).append('svg').attr('width', width).attr('height', height + margin.top);\n\n      // Bind nodes data to what will become DOM elements to represent them.\n      bubbles = svg.selectAll('.bubble').data(nodes, function (d) {\n        return d.id;\n      });\n\n      // Create new circle elements each with class `bubble`.\n      // There will be one circle.bubble for each object in the nodes array.\n      // Initially, their radius (r attribute) will be 0.\n      bubbles.enter().append('g'); // new below\n\n\n      bubbles.append(\"circle\").classed('bubble', true).attr('class', 'bubble-circle').attr('r', function (d) {\n        return d.radius;\n      }).attr('fill', function (d) {\n        return fillColor2(d.genre);\n      }).attr('stroke', function (d) {\n        return d3v3.rgb(fillColor2(d.genre)).darker();\n      }).attr('stroke-width', 0.5).attr('opacity', .75)\n      // .attr('cx', function(d) { return genreCenters[d.genre].x})\n      // .attr('cy', function(d) { return genreCenters[d.genre].y})\n      .on('mouseover', showDetail).on('mouseout', hideDetail).call(force.drag);\n\n      bubbles.append(\"text\").text(function (d) {\n        if (d.radius > 17 & d3.randomUniform(1, 10)() > 5) {\n          return d.name;\n        } else if (d.radius > 5 & d3.randomUniform(1, 10)() > 9.5) {\n          return d.name;\n        }\n      });\n\n      // text = svg.selectAll(\"text.bubble-label\")\n      //  .data(nodes, function (d) { return d.id; })\n      //     .enter()\n      //     .append(\"text\")\n      //     .attr(\"class\", \"bubble-label\")\n      //     .text(function(d) {\n      //       if (d.value < 17) {\n      //         return \"\";\n      //       } else {\n      //         return d.name;\n      //       }\n      //     });\n\n      // Fancy transition to make bubbles appear, ending with the\n      // correct radius\n      // bubbles.transition()\n      //   .duration(3000)\n      //   .attr('r', function (d) {return d.radius; });\n\n      // Set initial layout to single group.\n      groupBubbles();\n    };\n\n    d3v3.select(\".SearchBar\").append(\"input\").attr(\"class\", \"SearchBar\").attr(\"id\", \"search\").attr(\"type\", \"text\").attr(\"placeholder\", \"Find an artist...\");\n\n    d3v3.select('.bubble_main_title').append('g').append(\"text\").attr(\"x\", window.innerWidth / 2).attr(\"y\", 0 - window.innerHeight / 11).style('color', 'black').style('font-size', '50px').style('text-align', 'center').text(\"The Most Popular Artists\");\n\n    d3v3.select(\"#search\").on(\"keyup\", function (event) {\n\n      var searched_data = nodes,\n          text = this.value.trim();\n      if (text != \"\" & text != \"none\") {\n\n        var searchResults = searched_data.map(function (r) {\n          var regex = new RegExp(\"^\" + text + \".*\", \"i\");\n          if (regex.test(r.name)) {\n            // if there are any results\n            return regex.exec(r.name)[0]; // return them to searchResults\n          };\n        });\n\n        // filter blank entries from searchResults\n        searchResults = searchResults.filter(function (r) {\n          return r != undefined;\n        });\n        // filter dataset with searchResults\n        searched_data = searchResults.map(function (r) {\n          return nodes.filter(function (p) {\n            return p.name.indexOf(r) != -1;\n          });\n        });\n\n        // flatten array\n        searched_data = [].concat.apply([], searched_data); // This finds the data we want\n        // data bind with new data\n        selbubbles = bubbles.selectAll('.bubble-circle').data(searched_data, function (d) {\n          return d.name;\n        });\n        // Style select nodes\n        selbubbles.style('opacity', .75).attr('stroke-width', 3.5).attr('stroke', 'black');\n      } else {\n        d3v3.selectAll('.bubble-circle').style(\"opacity\", 1).attr('stroke-width', .5).attr('stroke', function (d) {\n          return d3v3.rgb(fillColor2(d.genre)).darker();\n        });\n      }\n\n      selbubbles.exit().style(\"opacity\", .75).attr('stroke-width', .5).attr('stroke', function (d) {\n        return d3v3.rgb(fillColor2(d.genre)).darker();\n      });\n    });\n    /*\r\n     * Sets visualization in \"single group mode\".\r\n     * The year labels are hidden and the force layout\r\n     * tick function is set to move all nodes to the\r\n     * center of the visualization.\r\n     */\n    function groupBubbles() {\n      hideYears();\n      hideUse();\n      showGenre();\n\n      force.on('tick', function (e) {\n        if (e.alpha >= .03) {\n          bubbles.each(moveToGenre(1.05 * e.alpha)).attr('transform', function (d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n          });\n        } else {\n          // call stop so tick values stop getting updated - otherwise they transitions will occur from different d.x,d.y values\n          force.stop();\n        }\n      });\n\n      force.start();\n    }\n\n    function moveToCenter(alpha) {\n      return function (d) {\n        d.x = d.x + (center.x - d.x) * damper * alpha;\n        d.y = d.y + (center.y - d.y) * damper * alpha;\n      };\n    }\n\n    function splitBubbles() {\n      showYears();\n\n      force.on('tick', function (e) {\n        bubbles.each(moveToYears(e.alpha)).attr('cx', function (d) {\n          return d.x;\n        }).attr('cy', function (d) {\n          return d.y;\n        });\n      });\n\n      force.start();\n    }\n\n    function splitBubblesUse() {\n      hideGenre();\n      showUse();\n\n      force.on('tick', function (e) {\n        bubbles.each(moveToUse(e.alpha)).attr('transform', function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      });\n\n      force.start();\n    }\n\n    function splitBubblesGenre() {\n      hideUse();\n      showGenre();\n\n      force.on('tick', function (e) {\n        bubbles.each(moveToGenre(e.alpha)).attr('transform', function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      });\n\n      force.start();\n    }\n\n    /*\r\n     * Helper function for \"split by year mode\".\r\n     * Returns a function that takes the data for a\r\n     * single node and adjusts the position values\r\n     * of that node to move it the year center for that\r\n     * node.\r\n     *\r\n     * Positioning is adjusted by the force layout's\r\n     * alpha parameter which gets smaller and smaller as\r\n     * the force layout runs. This makes the impact of\r\n     * this moving get reduced as each node gets closer to\r\n     * its destination, and so allows other forces like the\r\n     * node's charge force to also impact final location.\r\n     */\n    function moveToYears(alpha) {\n      return function (d) {\n        var target = yearCenters[d.year];\n        d.x = d.x + (target.x - d.x) * damper * alpha * 1.1;\n        d.y = d.y + (target.y - d.y) * damper * alpha * 1.1;\n      };\n    }\n\n    /*\r\n     * Hides Year title displays.\r\n     */\n    function hideYears() {\n      svg.selectAll('.year').remove();\n    }\n\n    /*\r\n     * Shows Year title displays.\r\n     */\n    function showYears() {\n      // Another way to do this would be to create\n      // the year texts once and then just hide them.\n      var yearsData = d3v3.keys(yearsTitleX);\n      var years = svg.selectAll('.year').data(yearsData);\n\n      years.enter().append('text').attr('class', 'year').attr('x', function (d) {\n        return yearsTitleX[d];\n      }).attr('y', 40).attr('text-anchor', 'middle').text(function (d) {\n        return d;\n      });\n    }\n\n    function moveToUse(alpha) {\n      return function (d) {\n        var target = useCenters[d.group];\n        d.x = d.x + (target.x - d.x) * damper * alpha * 1.1;\n        d.y = d.y + (target.y - d.y) * damper * alpha * 1.1;\n      };\n    }\n\n    /*\r\n     * Hides Year title displays.\r\n     */\n    function hideUse() {\n      svg.selectAll('.year').remove();\n    }\n\n    /*\r\n     * Shows Year title displays.\r\n     */\n    function showUse() {\n      // Another way to do this would be to create\n      // the year texts once and then just hide them.\n      var useData = d3v3.keys(useTitleX);\n      var use = svg.selectAll('.group').data(useData);\n\n      use.enter().append('text').attr('class', 'year').attr('x', function (d) {\n        return useTitleX[d];\n      }).attr('y', height / 11).attr('text-anchor', 'middle').text(function (d) {\n        return d;\n      });\n    }\n\n    function moveToGenre(alpha) {\n      return function (d) {\n        var target = genreCenters[d.genre];\n        d.x = d.x + (target.x - d.x) * damper * alpha * 1.1;\n        d.y = d.y + (target.y - d.y) * damper * alpha * 1.1;\n      };\n    }\n\n    /*\r\n     * Hides Year title displays.\r\n     */\n    function hideGenre() {\n      svg.selectAll('.title').remove();\n      svg.selectAll('.bubble-label').attr('visibility', 'hidden');\n\n      // d3.selectAll('.bubble-axis-text')\n      //     // .attr('visibility', 'hidden')\n      //     .transition()\n      //     .duration(3600)\n      //     .style('opacity', .5);\n      // show popularity axis\n      // d3.select('.bubble-axis')\n      //     .attr('visibility', 'visible')\n      //     .transition()\n      //     .duration(3000)\n      //     .attr(\"x2\", width / 2)\n      //     .attr(\"y2\", height / 11)\n      //     // .attr(\"marker-end\", \"url(#arrow)\")\n      //     .style('opacity', .5);\n    }\n\n    /*\r\n     * Shows Year title displays.\r\n     */\n    function showGenre() {\n      // Another way to do this would be to create\n      // the year texts once and then just hide them.\n      var genreData = d3v3.keys(genreTitleX);\n      var genre = svg.selectAll('.genre').data(genreData);\n\n      genre.enter().append('text').attr('class', 'title').attr('x', function (d) {\n        return genreTitleX[d];\n      }).attr('y', function (d) {\n        return genreTitleY[d];\n      }).attr('text-anchor', 'middle').text(function (d) {\n        return d;\n      });\n\n      svg.selectAll('.bubble-label').attr('visibility', 'visible');\n      // hide popularity axis\n      d3.select('.bubble-axis').attr(\"x2\", width / 7).attr(\"y2\", height / 11).attr('visibility', 'hidden');\n\n      d3.selectAll('.bubble-axis-text').style('opacity', 0);\n    }\n\n    /*\r\n     * Function called on mouseover to display the\r\n     * details of a bubble in the tooltip.\r\n     */\n    function showDetail(d) {\n      // change outline to indicate hover state.\n      var strokwid = d3v3.select(this).attr('stroke-width');\n      d3v3.select(this).attr('stroke', 'black').attr('stroke-width', strokwid == 3.5 ? 3.5 : 2.4).style('opacity', .75).attr('r', function (d) {\n        return d.radius + 5;\n      });\n\n      var content = '<div class=\"tttext\"><span class=\"name\">Artist: </span><span class=\"value\">' + d.name + '</span><br/>' + '<span class=\"name\">Amount Used: </span><span class=\"value\">' + d.value + '</span><br/>' + '<span class=\"name\">Genre: </span><span class=\"value\">' + d.genre + '</span><br/></div>';\n      tooltip.showTooltip(content, d3v3.event);\n    }\n\n    /*\r\n     * Hides tooltip\r\n     */\n    function hideDetail(d) {\n      // reset outline\n      var strokwid = d3v3.select(this).attr('stroke-width');\n      d3v3.select(this)\n      // .attr('stroke', d3v3.rgb(fillColor2(d.genre)).darker())\n      .attr('stroke-width', strokwid == 3.5 ? 3.5 : .5).attr('stroke', function (d) {\n        if (strokwid == 3.5) {\n          return 'black';\n        } else {\n          return d3v3.rgb(fillColor2(d.genre)).darker();\n        }\n      }).style('opacity', .75).attr('fill', function (d) {\n        return fillColor2(d.genre);\n      }).attr('r', function (d) {\n        return d.radius;\n      });\n\n      tooltip.hideTooltip();\n    }\n\n    /*\r\n     * Externally accessible function (this is attached to the\r\n     * returned chart function). Allows the visualization to toggle\r\n     * between \"single group\" and \"split by year\" modes.\r\n     *\r\n     * displayName is expected to be a string and either 'year' or 'all'.\r\n     */\n    chart.toggleDisplay = function (displayName) {\n      if (displayName === 'year') {\n        splitBubbles();\n      } else if (displayName == 'use') {\n        splitBubblesUse();\n      } else if (displayName == 'genre') {\n        splitBubblesGenre();\n      } else {\n        groupBubbles();\n      }\n    };\n\n    // return the chart function from closure.\n    return chart;\n  }\n\n  /*\r\n   * Below is the initialization code as well as some helper functions\r\n   * to create a new bubble chart instance, load the data, and display it.\r\n   */\n\n  var myBubbleChart = bubbleChart();\n\n  /*\r\n   * Function called once data is loaded from CSV.\r\n   * Calls bubble chart function to display inside #vis div.\r\n   */\n  function display(error, data) {\n    if (error) {\n      console.log(error);\n    }\n\n    myBubbleChart('#vis', data);\n  }\n\n  /*\r\n   * Sets up the layout buttons to allow for toggling between view modes.\r\n   */\n  function setupButtons() {\n    d3v3.select('#toolbar').selectAll('.button').on('click', function () {\n      // Remove active class from all buttons\n      d3v3.selectAll('.button').classed('active', false);\n      // Find the button just clicked\n      var button = d3v3.select(this);\n\n      // Set it as the active button\n      button.classed('active', true);\n\n      // Get the id of the button\n      var buttonId = button.attr('id');\n\n      // Toggle the bubble chart based on\n      // the currently clicked button.\n      myBubbleChart.toggleDisplay(buttonId);\n    });\n  }\n\n  // Load the data.\n  d3v3.csv('assets/soundtrack_data.csv', display);\n\n  // setup the buttons.\n  setupButtons();\n}\n\nexports.default = { init: init, resize: resize };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvYnViYmxlcy5qcz8yYWZiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlc2l6ZSgpIHt9XHJcblxyXG5mdW5jdGlvbiBpbml0KCkge1xyXG4vKiBidWJibGVDaGFydCBjcmVhdGlvbiBmdW5jdGlvbi5cclxuICpcclxuICovXHJcblxyXG5cclxuXHJcbmZ1bmN0aW9uIGZsb2F0aW5nVG9vbHRpcCh0b29sdGlwSWQsIHdpZHRoKSB7XHJcbiAgLy8gTG9jYWwgdmFyaWFibGUgdG8gaG9sZCB0b29sdGlwIGRpdiBmb3JcclxuICAvLyBtYW5pcHVsYXRpb24gaW4gb3RoZXIgZnVuY3Rpb25zLlxyXG4gIHZhciB0dCA9IGQzdjMuc2VsZWN0KCdib2R5JylcclxuICAgIC5hcHBlbmQoJ2RpdicpXHJcbiAgICAuYXR0cignY2xhc3MnLCAndG9vbHRpcCcpXHJcbiAgICAuYXR0cignaWQnLCB0b29sdGlwSWQpXHJcbiAgICAuc3R5bGUoJ3BvaW50ZXItZXZlbnRzJywgJ25vbmUnKTtcclxuXHJcbiAgLy8gU2V0IGEgd2lkdGggaWYgaXQgaXMgcHJvdmlkZWQuXHJcbiAgaWYgKHdpZHRoKSB7XHJcbiAgICB0dC5zdHlsZSgnd2lkdGgnLCB3aWR0aCk7XHJcbiAgfVxyXG5cclxuICAvLyBJbml0aWFsbHkgaXQgaXMgaGlkZGVuLlxyXG4gIGhpZGVUb29sdGlwKCk7XHJcblxyXG4gIC8qXHJcbiAgICogRGlzcGxheSB0b29sdGlwIHdpdGggcHJvdmlkZWQgY29udGVudC5cclxuICAgKlxyXG4gICAqIGNvbnRlbnQgaXMgZXhwZWN0ZWQgdG8gYmUgSFRNTCBzdHJpbmcuXHJcbiAgICpcclxuICAgKiBldmVudCBpcyBkM3YzLmV2ZW50IGZvciBwb3NpdGlvbmluZy5cclxuICAgKi9cclxuICBmdW5jdGlvbiBzaG93VG9vbHRpcChjb250ZW50LCBldmVudCkge1xyXG4gICAgdHQuc3R5bGUoJ29wYWNpdHknLCAxLjApXHJcbiAgICAgIC5odG1sKGNvbnRlbnQpO1xyXG5cclxuICAgIHVwZGF0ZVBvc2l0aW9uKGV2ZW50KTtcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgICogSGlkZSB0aGUgdG9vbHRpcCBkaXYuXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gaGlkZVRvb2x0aXAoKSB7XHJcbiAgICB0dC5zdHlsZSgnb3BhY2l0eScsIDAuMCk7XHJcbiAgfVxyXG5cclxuICAvKlxyXG4gICAqIEZpZ3VyZSBvdXQgd2hlcmUgdG8gcGxhY2UgdGhlIHRvb2x0aXBcclxuICAgKiBiYXNlZCBvbiBkM3YzIG1vdXNlIGV2ZW50LlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uKGV2ZW50KSB7XHJcbiAgICB2YXIgeE9mZnNldCA9IDIwO1xyXG4gICAgdmFyIHlPZmZzZXQgPSAxMDtcclxuXHJcbiAgICB2YXIgdHR3ID0gdHQuc3R5bGUoJ3dpZHRoJyk7XHJcbiAgICB2YXIgdHRoID0gdHQuc3R5bGUoJ2hlaWdodCcpO1xyXG5cclxuICAgIHZhciB3c2NyWSA9IHdpbmRvdy5zY3JvbGxZO1xyXG4gICAgdmFyIHdzY3JYID0gd2luZG93LnNjcm9sbFg7XHJcblxyXG4gICAgdmFyIGN1clggPSAoZG9jdW1lbnQuYWxsKSA/IGV2ZW50LmNsaWVudFggKyB3c2NyWCA6IGV2ZW50LnBhZ2VYO1xyXG4gICAgdmFyIGN1clkgPSAoZG9jdW1lbnQuYWxsKSA/IGV2ZW50LmNsaWVudFkgKyB3c2NyWSA6IGV2ZW50LnBhZ2VZO1xyXG4gICAgdmFyIHR0bGVmdCA9ICgoY3VyWCAtIHdzY3JYICsgeE9mZnNldCAqIDIgKyB0dHcpID4gd2luZG93LmlubmVyV2lkdGgpID9cclxuICAgICAgICAgICAgICAgICBjdXJYIC0gdHR3IC0geE9mZnNldCAqIDIgOiBjdXJYICsgeE9mZnNldDtcclxuXHJcbiAgICBpZiAodHRsZWZ0IDwgd3NjclggKyB4T2Zmc2V0KSB7XHJcbiAgICAgIHR0bGVmdCA9IHdzY3JYICsgeE9mZnNldDtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgdHR0b3AgPSAoKGN1clkgLSB3c2NyWSArIHlPZmZzZXQgKiAyICsgdHRoKSA+IHdpbmRvdy5pbm5lckhlaWdodCkgP1xyXG4gICAgICAgICAgICAgICAgY3VyWSAtIHR0aCAtIHlPZmZzZXQgKiAyIDogY3VyWSArIHlPZmZzZXQ7XHJcblxyXG4gICAgaWYgKHR0dG9wIDwgd3NjclkgKyB5T2Zmc2V0KSB7XHJcbiAgICAgIHR0dG9wID0gY3VyWSArIHlPZmZzZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgdHQuc3R5bGUoeyB0b3A6IHR0dG9wICsgJ3B4JywgbGVmdDogdHRsZWZ0ICsgJ3B4JyB9KTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzaG93VG9vbHRpcDogc2hvd1Rvb2x0aXAsXHJcbiAgICBoaWRlVG9vbHRpcDogaGlkZVRvb2x0aXAsXHJcbiAgICB1cGRhdGVQb3NpdGlvbjogdXBkYXRlUG9zaXRpb25cclxuICB9O1xyXG59XHJcblxyXG5cclxuXHJcbi8qIGJ1YmJsZUNoYXJ0IGNyZWF0aW9uIGZ1bmN0aW9uLlxyXG4gKlxyXG4gKi9cclxuZnVuY3Rpb24gYnViYmxlQ2hhcnQoKSB7XHJcbiAgLy8gQ29uc3RhbnRzIGZvciBzaXppbmdcclxuICB2YXIgc2VhcmNoQmFyID0gZDN2My5zZWxlY3QoJy5TZWFyY2hCYXInKTtcclxuXHJcbiAgdmFyIG1hcmdpbiA9IHt0b3A6IDIwLCBib3R0b206IDIwLCBsZWZ0OiA1MCwgcmlnaHQ6IDIwfTtcclxuICAvLyB2YXIgd2lkdGggPSAxNTAwIC0gbWFyZ2luLnJpZ2h0O1xyXG4gIC8vIHZhciBoZWlnaHQgPSAxMDAwIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XHJcbiAgLy8gdmFyIGJvdW5kaW5nUmVjdCA9IGQzLnNlbGVjdCgnI3ZpcycpLm5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICB2YXIgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xyXG4gIHZhciBoZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgO1xyXG4gIHZhciB3aWR0aCA9IDExMDA7XHJcbiAgdmFyIGhlaWdodCA9IDEwNTA7XHJcblxyXG4gIGNvbnNvbGUubG9nKCd3aWR0aCcsIHdpZHRoKVxyXG4gIGNvbnNvbGUubG9nKCdoZWlnaHQnLCBoZWlnaHQpXHJcblxyXG4gIC8vIHRvb2x0aXAgZm9yIG1vdXNlb3ZlciBmdW5jdGlvbmFsaXR5XHJcbiAgdmFyIHRvb2x0aXAgPSBmbG9hdGluZ1Rvb2x0aXAoJ2J1YmJsZV90b29sdGlwJywgMjQwKTtcclxuXHJcbiAgLy8gTG9jYXRpb25zIHRvIG1vdmUgYnViYmxlcyB0b3dhcmRzLCBkZXBlbmRpbmdcclxuICAvLyBvbiB3aGljaCB2aWV3IG1vZGUgaXMgc2VsZWN0ZWQuXHJcbiAgdmFyIGNlbnRlciA9IHsgeDogd2lkdGggLyAyLCB5OiBoZWlnaHQgLyAyIH07XHJcblxyXG4gIHZhciBzZWxidWJibGVzID0gW107XHJcblxyXG4gIHZhciBwb3BTY2FsZSA9IGQzLnNjYWxlT3JkaW5hbCgpXHJcbiAgICAuZG9tYWluKFsnbG93JywgJ21lZGl1bScsICdoaWdoJ10pXHJcbiAgICAucmFuZ2UoW3dpZHRoIC8gMy41LCB3aWR0aCAvIDIsIHdpZHRoIC8gMS40XSk7XHJcblxyXG4gIHZhciBnZW5lcmVYU2NhbGUgPSBkMy5zY2FsZUJhbmQoKVxyXG4gICAgLmRvbWFpbihbJzEnLCAnMicsJzMnLCc0J10pXHJcbiAgICAvLyAucmFuZ2UoW3dpZHRoLCB3aWR0aCwgKHdpZHRoIC8gMi43NSksICh3aWR0aCAvIDIuNyksICh3aWR0aCAvIDEuOSksICh3aWR0aCAvIDEuOSksICh3aWR0aCAvIDEuNTUpLCAod2lkdGggLyAxLjU1KSwgKHdpZHRoIC8gMS41NSldKTtcclxuICAgIC5yYW5nZShbd2lkdGggLyA0LCAod2lkdGggLSBtYXJnaW4ucmlnaHQgKV0pXHJcblxyXG4gIHZhciB1c2VDZW50ZXJzID0ge1xyXG4gICAgJ2xvdyc6IHsgeDogcG9wU2NhbGUoJ2xvdycpLCB5OiBoZWlnaHQgLyAyLjUgfSwgLy93aWR0aCAvIDRcclxuICAgICdtZWRpdW0nOiB7IHg6IHBvcFNjYWxlKCdtZWRpdW0nKSwgeTogaGVpZ2h0IC8gMi41IH0sIC8vd2lkdGggLyAyLjc1XHJcbiAgICAnaGlnaCc6IHsgeDogcG9wU2NhbGUoJ2hpZ2gnKSwgeTogaGVpZ2h0IC8gMi41IH0gLy93aWR0aCAvIDEuNVxyXG4gIH07XHJcblxyXG4gIC8vIFggbG9jYXRpb25zIG9mIHRoZSB5ZWFyIHRpdGxlcy5cclxuICB2YXIgdXNlVGl0bGVYID0ge1xyXG4gICAgJ0xvdyc6ICBwb3BTY2FsZSgnbG93JykgLSBtYXJnaW4ucmlnaHQqMiwgLy93aWR0aCAvIDYsXHJcbiAgICAnTWVkaXVtJzogcG9wU2NhbGUoJ21lZGl1bScpLC8vd2lkdGggLyAyLjMsXHJcbiAgICAnSGlnaCc6IHBvcFNjYWxlKCdoaWdoJykrbWFyZ2luLnJpZ2h0KjIgLy93aWR0aCAvIDEuMzVcclxuICB9O1xyXG5cclxuICB2YXIgZ2VucmVDZW50ZXJzID0ge1xyXG4gICAgJ0NsYXNzaWMgUm9jayc6IHsgeDogZ2VuZXJlWFNjYWxlKCcxJykgKyBtYXJnaW4ubGVmdCAqIC44LCB5OiBoZWlnaHQgLyAzLjV9LFxyXG4gICAgJ0luZGllL0FsdGVybmF0aXZlJzogeyB4OiBnZW5lcmVYU2NhbGUoJzEnKSArIG1hcmdpbi5sZWZ0ICogLjgsIHk6IGhlaWdodCAvIDIgfSxcclxuICAgICdIaXAgSG9wJzogeyB4OiBnZW5lcmVYU2NhbGUoJzInKSwgeTogaGVpZ2h0IC8gMy41fSxcclxuICAgICdFbGVjdHJvbmljJzogeyB4OiBnZW5lcmVYU2NhbGUoJzInKSwgeTogaGVpZ2h0IC8gMn0sXHJcbiAgICAnUHVuayc6IHsgeDogZ2VuZXJlWFNjYWxlKCczJyksIHk6IGhlaWdodCAvIDMuNX0sXHJcbiAgICAnTWV0YWwnOiB7IHg6IGdlbmVyZVhTY2FsZSgnMycpLCB5OiBoZWlnaHQgLyAyfSxcclxuICAgICdPdGhlcic6IHsgeDogZ2VuZXJlWFNjYWxlKCc0JykgLSBtYXJnaW4ucmlnaHQqNCwgeTogaGVpZ2h0IC8gMy41fSxcclxuICAgICdKYXp6L1NvdWwnOiB7IHg6IGdlbmVyZVhTY2FsZSgnNCcpIC0gbWFyZ2luLnJpZ2h0KjQsIHk6IGhlaWdodCAvIDJ9LFxyXG4gICAgJ1JvY2snOiB7IHg6IGdlbmVyZVhTY2FsZSgnNCcpIC0gbWFyZ2luLnJpZ2h0KjQsIHk6IGhlaWdodCAvIDJ9XHJcbiAgfTtcclxuXHJcbiAgLy8gWCBsb2NhdGlvbnMgb2YgdGhlIHllYXIgdGl0bGVzLlxyXG4gIHZhciBnZW5yZVRpdGxlWCA9IHtcclxuICAgICdDbGFzc2ljIFJvY2snOiBnZW5lcmVYU2NhbGUoJzEnKSAtIG1hcmdpbi5sZWZ0ICogMixcclxuICAgICdJbmRpZS9BbHRlcm5hdGl2ZSc6IGdlbmVyZVhTY2FsZSgnMScpIC0gbWFyZ2luLmxlZnQgKiAyLFxyXG4gICAgJ0hpcCBIb3AnOiBnZW5lcmVYU2NhbGUoJzInKSxcclxuICAgICdFbGVjdHJvbmljJzogZ2VuZXJlWFNjYWxlKCcyJyksXHJcbiAgICAnUHVuayc6IGdlbmVyZVhTY2FsZSgnMycpICsgbWFyZ2luLnJpZ2h0KjQsXHJcbiAgICAnTWV0YWwnOiBnZW5lcmVYU2NhbGUoJzMnKSArIG1hcmdpbi5yaWdodCo0LFxyXG4gICAgJ090aGVyJzogZ2VuZXJlWFNjYWxlKCc0JykgKyBtYXJnaW4ucmlnaHQgKiA0LFxyXG4gICAgJ0phenovU291bCc6IGdlbmVyZVhTY2FsZSgnNCcpICsgbWFyZ2luLnJpZ2h0ICogNFxyXG5cclxuICB9O1xyXG5cclxuICAvLyBZIGxvY2F0aW9ucyBvZiB0aGUgeWVhciB0aXRsZXMuXHJcbiAgdmFyIGdlbnJlVGl0bGVZID0ge1xyXG4gICAgJ0NsYXNzaWMgUm9jayc6IGhlaWdodCAtIChoZWlnaHQgLSBtYXJnaW4udG9wKjIpLFxyXG4gICAgJ0luZGllL0FsdGVybmF0aXZlJzogaGVpZ2h0IC8gMi40LFxyXG4gICAgJ0hpcCBIb3AnOiBoZWlnaHQgLSAoaGVpZ2h0IC0gbWFyZ2luLnRvcCoyKSxcclxuICAgICdFbGVjdHJvbmljJzogaGVpZ2h0IC8gMi40LFxyXG4gICAgJ1B1bmsnOiBoZWlnaHQgLSAoaGVpZ2h0IC0gbWFyZ2luLnRvcCoyKSxcclxuICAgICdNZXRhbCc6IGhlaWdodCAvIDIuNCxcclxuICAgICdPdGhlcic6IGhlaWdodCAtIChoZWlnaHQgLSBtYXJnaW4udG9wKjIpLFxyXG4gICAgJ0phenovU291bCc6IGhlaWdodCAvIDIuNCxcclxuXHJcbiAgfTtcclxuXHJcbiAgLy8gVXNlZCB3aGVuIHNldHRpbmcgdXAgZm9yY2UgYW5kXHJcbiAgLy8gbW92aW5nIGFyb3VuZCBub2Rlc1xyXG4gIHZhciBkYW1wZXIgPSAwLjEwMjtcclxuXHJcbiAgLy8gVGhlc2Ugd2lsbCBiZSBzZXQgaW4gY3JlYXRlX25vZGVzIGFuZCBjcmVhdGVfdmlzXHJcbiAgdmFyIHN2ZyA9IG51bGw7XHJcbiAgdmFyIGJ1YmJsZXMgPSBudWxsO1xyXG4gIHZhciBub2RlcyA9IFtdO1xyXG5cclxuICB2YXIgdGV4dCA9IFtdO1xyXG5cclxuICBmdW5jdGlvbiBjaGFyZ2UoZCkge1xyXG4gICAgcmV0dXJuIC1NYXRoLnBvdyhkLnJhZGl1cywgMi4wKSAvIDcuNztcclxuICB9XHJcblxyXG4gIHZhciBmb3JjZSA9IGQzdjMubGF5b3V0LmZvcmNlKClcclxuICAgIC5zaXplKFt3aWR0aCwgaGVpZ2h0XSlcclxuICAgIC5jaGFyZ2UoY2hhcmdlKVxyXG4gICAgLmdyYXZpdHkoLTAuMDExKVxyXG4gICAgLmZyaWN0aW9uKDAuOSk7XHJcblxyXG4gICAgdmFyIGZpbGxDb2xvcjIgPSBkM3YzLnNjYWxlLm9yZGluYWwoKVxyXG4gICAgLmRvbWFpbihbJ0NsYXNzaWMgUm9jaycsICdQdW5rJywgJ0luZGllL0FsdGVybmF0aXZlJywgJ01ldGFsJywgJ0hpcCBIb3AnLCAnRWxlY3Ryb25pYycsICdKYXp6L1NvdWwnXSlcclxuICAgIC5yYW5nZShbJyNmYmI0YWUnLCAnI2ZkZGFlYycsICcjY2NlYmM1JywgJyNkZWNiZTQnLCAnI2ZlZDlhNicsICcjZmZmZmNjJywnI2IzY2RlMycsICcjZjJmMmYyJ10pO1xyXG5cclxuICAvLyBOaWNlIGxvb2tpbmcgY29sb3JzIC0gbm8gcmVhc29uIHRvIGJ1Y2sgdGhlIHRyZW5kXHJcbiAgdmFyIGZpbGxDb2xvciA9IGQzdjMuc2NhbGUub3JkaW5hbCgpXHJcbiAgICAuZG9tYWluKFsnbG93JywgJ21lZGl1bScsICdoaWdoJ10pXHJcbiAgICAucmFuZ2UoWydyZWQnLCAncmVkJywgJyNiMmUyZTInXSk7XHJcblxyXG4gIC8vIFNpemVzIGJ1YmJsZXMgYmFzZWQgb24gdGhlaXIgYXJlYSBpbnN0ZWFkIG9mIHJhdyByYWRpdXNcclxuICB2YXIgcmFkaXVzU2NhbGUgPSBkM3YzLnNjYWxlLnBvdygpXHJcbiAgICAuZXhwb25lbnQoMi4xKSAgLy8gZXhwb25lbnQgbWFrZXMgdGhlIGdyYXBoICd0aWdodGVyJ1xyXG4gICAgLnJhbmdlKFs4LCA3MF0pO1xyXG5cclxuICAvKlxyXG4gICAqIFRoaXMgZGF0YSBtYW5pcHVsYXRpb24gZnVuY3Rpb24gdGFrZXMgdGhlIHJhdyBkYXRhIGZyb21cclxuICAgKiB0aGUgQ1NWIGZpbGUgYW5kIGNvbnZlcnRzIGl0IGludG8gYW4gYXJyYXkgb2Ygbm9kZSBvYmplY3RzLlxyXG4gICAqIEVhY2ggbm9kZSB3aWxsIHN0b3JlIGRhdGEgYW5kIHZpc3VhbGl6YXRpb24gdmFsdWVzIHRvIHZpc3VhbGl6ZVxyXG4gICAqIGEgYnViYmxlLlxyXG4gICAqXHJcbiAgICogcmF3RGF0YSBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheSBvZiBkYXRhIG9iamVjdHMsIHJlYWQgaW4gZnJvbVxyXG4gICAqIG9uZSBvZiBkM3YzJ3MgbG9hZGluZyBmdW5jdGlvbnMgbGlrZSBkM3YzLmNzdi5cclxuICAgKlxyXG4gICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgbmV3IG5vZGUgYXJyYXksIHdpdGggYSBub2RlIGluIHRoYXRcclxuICAgKiBhcnJheSBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSByYXdEYXRhIGlucHV0LlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZU5vZGVzKHJhd0RhdGEpIHtcclxuICAgIC8vIFVzZSBtYXAoKSB0byBjb252ZXJ0IHJhdyBkYXRhIGludG8gbm9kZSBkYXRhLlxyXG4gICAgLy8gQ2hlY2tvdXQgaHR0cDovL2xlYXJuanNkYXRhLmNvbS8gZm9yIG1vcmUgb25cclxuICAgIC8vIHdvcmtpbmcgd2l0aCBkYXRhLlxyXG4gICAgdmFyIG15Tm9kZXMgPSByYXdEYXRhLm1hcChmdW5jdGlvbiAoZCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkOiBkLmlkLFxyXG4gICAgICAgIHJhZGl1czogcmFkaXVzU2NhbGUoK2QudG90ZSksXHJcbiAgICAgICAgdmFsdWU6IGQudG90ZSxcclxuICAgICAgICBuYW1lOiBkLmFydGlzdCxcclxuICAgICAgICBvcmc6IGQub3JnYW5pemF0aW9uLFxyXG4gICAgICAgIGdyb3VwOiBkLmdyb3VwLFxyXG4gICAgICAgIGdlbnJlOiBkLmdlbnJlLFxyXG4gICAgICAgIHllYXI6IGQueWVhcixcclxuICAgICAgICB4OiArZ2VucmVDZW50ZXJzW2QuZ2VucmVdLngsLy85MDAsXHJcbiAgICAgICAgeTogTWF0aC5yYW5kb20oKSAqICtnZW5yZUNlbnRlcnNbZC5nZW5yZV0ueVxyXG4gICAgICB9O1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gc29ydCB0aGVtIHRvIHByZXZlbnQgb2NjbHVzaW9uIG9mIHNtYWxsZXIgbm9kZXMuXHJcbiAgICBteU5vZGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlOyB9KTtcclxuXHJcbiAgICByZXR1cm4gbXlOb2RlcztcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgICogTWFpbiBlbnRyeSBwb2ludCB0byB0aGUgYnViYmxlIGNoYXJ0LiBUaGlzIGZ1bmN0aW9uIGlzIHJldHVybmVkXHJcbiAgICogYnkgdGhlIHBhcmVudCBjbG9zdXJlLiBJdCBwcmVwYXJlcyB0aGUgcmF3RGF0YSBmb3IgdmlzdWFsaXphdGlvblxyXG4gICAqIGFuZCBhZGRzIGFuIHN2ZyBlbGVtZW50IHRvIHRoZSBwcm92aWRlZCBzZWxlY3RvciBhbmQgc3RhcnRzIHRoZVxyXG4gICAqIHZpc3VhbGl6YXRpb24gY3JlYXRpb24gcHJvY2Vzcy5cclxuICAgKlxyXG4gICAqIHNlbGVjdG9yIGlzIGV4cGVjdGVkIHRvIGJlIGEgRE9NIGVsZW1lbnQgb3IgQ1NTIHNlbGVjdG9yIHRoYXRcclxuICAgKiBwb2ludHMgdG8gdGhlIHBhcmVudCBlbGVtZW50IG9mIHRoZSBidWJibGUgY2hhcnQuIEluc2lkZSB0aGlzXHJcbiAgICogZWxlbWVudCwgdGhlIGNvZGUgd2lsbCBhZGQgdGhlIFNWRyBjb250aW5lciBmb3IgdGhlIHZpc3VhbGl6YXRpb24uXHJcbiAgICpcclxuICAgKiByYXdEYXRhIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5IG9mIGRhdGEgb2JqZWN0cyBhcyBwcm92aWRlZCBieVxyXG4gICAqIGEgZDN2MyBsb2FkaW5nIGZ1bmN0aW9uIGxpa2UgZDN2My5jc3YuXHJcbiAgICovXHJcbiAgdmFyIGNoYXJ0ID0gZnVuY3Rpb24gY2hhcnQoc2VsZWN0b3IsIHJhd0RhdGEpIHtcclxuICAgIC8vIFVzZSB0aGUgbWF4IHRvdGFsX2Ftb3VudCBpbiB0aGUgZGF0YSBhcyB0aGUgbWF4IGluIHRoZSBzY2FsZSdzIGRvbWFpblxyXG4gICAgLy8gbm90ZSB3ZSBoYXZlIHRvIGVuc3VyZSB0aGUgdG90YWxfYW1vdW50IGlzIGEgbnVtYmVyIGJ5IGNvbnZlcnRpbmcgaXRcclxuICAgIC8vIHdpdGggYCtgLlxyXG4gICAgdmFyIG1heEFtb3VudCA9IGQzdjMubWF4KHJhd0RhdGEsIGZ1bmN0aW9uIChkKSB7IHJldHVybiArZC50b3RlOyB9KTtcclxuICAgIHJhZGl1c1NjYWxlLmRvbWFpbihbMCwgbWF4QW1vdW50XSk7XHJcblxyXG4gICAgcmF3RGF0YS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHsgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlOyB9KTtcclxuXHJcbiAgICBub2RlcyA9IGNyZWF0ZU5vZGVzKHJhd0RhdGEpO1xyXG4gICAgLy8gU2V0IHRoZSBmb3JjZSdzIG5vZGVzIHRvIG91ciBuZXdseSBjcmVhdGVkIG5vZGVzIGFycmF5LlxyXG4gICAgZm9yY2Uubm9kZXMobm9kZXMpO1xyXG5cclxuICAgIC8vIENyZWF0ZSBhIFNWRyBlbGVtZW50IGluc2lkZSB0aGUgcHJvdmlkZWQgc2VsZWN0b3JcclxuICAgIC8vIHdpdGggZGVzaXJlZCBzaXplLlxyXG4gICAgc3ZnID0gZDN2My5zZWxlY3Qoc2VsZWN0b3IpXHJcbiAgICAgIC5hcHBlbmQoJ3N2ZycpXHJcbiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoKVxyXG4gICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgbWFyZ2luLnRvcCk7XHJcblxyXG5cclxuICAgIC8vIEJpbmQgbm9kZXMgZGF0YSB0byB3aGF0IHdpbGwgYmVjb21lIERPTSBlbGVtZW50cyB0byByZXByZXNlbnQgdGhlbS5cclxuICAgIGJ1YmJsZXMgPSBzdmcuc2VsZWN0QWxsKCcuYnViYmxlJylcclxuICAgICAgLmRhdGEobm9kZXMsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLmlkOyB9KTtcclxuXHJcbiAgICAvLyBDcmVhdGUgbmV3IGNpcmNsZSBlbGVtZW50cyBlYWNoIHdpdGggY2xhc3MgYGJ1YmJsZWAuXHJcbiAgICAvLyBUaGVyZSB3aWxsIGJlIG9uZSBjaXJjbGUuYnViYmxlIGZvciBlYWNoIG9iamVjdCBpbiB0aGUgbm9kZXMgYXJyYXkuXHJcbiAgICAvLyBJbml0aWFsbHksIHRoZWlyIHJhZGl1cyAociBhdHRyaWJ1dGUpIHdpbGwgYmUgMC5cclxuICAgIGJ1YmJsZXMuZW50ZXIoKVxyXG4gICAgICAuYXBwZW5kKCdnJykgLy8gbmV3IGJlbG93XHJcblxyXG5cclxuXHJcblxyXG4gICAgYnViYmxlc1xyXG4gICAgICAuYXBwZW5kKFwiY2lyY2xlXCIpXHJcbiAgICAgIC5jbGFzc2VkKCdidWJibGUnLCB0cnVlKVxyXG4gICAgICAuYXR0cignY2xhc3MnLCAnYnViYmxlLWNpcmNsZScpXHJcbiAgICAgIC5hdHRyKCdyJywgZnVuY3Rpb24oZCl7XHJcbiAgICAgICAgcmV0dXJuIGQucmFkaXVzO1xyXG4gICAgICB9KVxyXG4gICAgICAuYXR0cignZmlsbCcsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBmaWxsQ29sb3IyKGQuZ2VucmUpOyB9KVxyXG4gICAgICAuYXR0cignc3Ryb2tlJywgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQzdjMucmdiKGZpbGxDb2xvcjIoZC5nZW5yZSkpLmRhcmtlcigpOyB9KVxyXG4gICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgMC41KVxyXG4gICAgICAuYXR0cignb3BhY2l0eScsIC43NSlcclxuICAgICAgLy8gLmF0dHIoJ2N4JywgZnVuY3Rpb24oZCkgeyByZXR1cm4gZ2VucmVDZW50ZXJzW2QuZ2VucmVdLnh9KVxyXG4gICAgICAvLyAuYXR0cignY3knLCBmdW5jdGlvbihkKSB7IHJldHVybiBnZW5yZUNlbnRlcnNbZC5nZW5yZV0ueX0pXHJcbiAgICAgIC5vbignbW91c2VvdmVyJywgc2hvd0RldGFpbClcclxuICAgICAgLm9uKCdtb3VzZW91dCcsIGhpZGVEZXRhaWwpXHJcbiAgICAgIC5jYWxsKGZvcmNlLmRyYWcpO1xyXG5cclxuICAgIGJ1YmJsZXNcclxuICAgICAgLmFwcGVuZChcInRleHRcIilcclxuICAgICAgLnRleHQoZnVuY3Rpb24oZCl7XHJcbiAgICAgICAgaWYoZC5yYWRpdXMgPiAxNyAmIGQzLnJhbmRvbVVuaWZvcm0oMSwgMTApKCkgPiA1KXtcclxuICAgICAgICAgIHJldHVybiBkLm5hbWU7XHJcbiAgICAgICAgfSBlbHNlIGlmKGQucmFkaXVzID4gNSAmIGQzLnJhbmRvbVVuaWZvcm0oMSwgMTApKCkgPiA5LjUpIHtcclxuICAgICAgICAgIHJldHVybiBkLm5hbWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAvLyB0ZXh0ID0gc3ZnLnNlbGVjdEFsbChcInRleHQuYnViYmxlLWxhYmVsXCIpXHJcbiAgICAvLyAgLmRhdGEobm9kZXMsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLmlkOyB9KVxyXG4gICAgLy8gICAgIC5lbnRlcigpXHJcbiAgICAvLyAgICAgLmFwcGVuZChcInRleHRcIilcclxuICAgIC8vICAgICAuYXR0cihcImNsYXNzXCIsIFwiYnViYmxlLWxhYmVsXCIpXHJcbiAgICAvLyAgICAgLnRleHQoZnVuY3Rpb24oZCkge1xyXG4gICAgLy8gICAgICAgaWYgKGQudmFsdWUgPCAxNykge1xyXG4gICAgLy8gICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgIC8vICAgICAgIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiBkLm5hbWU7XHJcbiAgICAvLyAgICAgICB9XHJcbiAgICAvLyAgICAgfSk7XHJcblxyXG4gICAgLy8gRmFuY3kgdHJhbnNpdGlvbiB0byBtYWtlIGJ1YmJsZXMgYXBwZWFyLCBlbmRpbmcgd2l0aCB0aGVcclxuICAgIC8vIGNvcnJlY3QgcmFkaXVzXHJcbiAgICAvLyBidWJibGVzLnRyYW5zaXRpb24oKVxyXG4gICAgLy8gICAuZHVyYXRpb24oMzAwMClcclxuICAgIC8vICAgLmF0dHIoJ3InLCBmdW5jdGlvbiAoZCkge3JldHVybiBkLnJhZGl1czsgfSk7XHJcblxyXG4gICAgLy8gU2V0IGluaXRpYWwgbGF5b3V0IHRvIHNpbmdsZSBncm91cC5cclxuICAgIGdyb3VwQnViYmxlcygpO1xyXG4gIH07XHJcblxyXG4gIGQzdjMuc2VsZWN0KFwiLlNlYXJjaEJhclwiKVxyXG4gICAgLmFwcGVuZChcImlucHV0XCIpXHJcbiAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJTZWFyY2hCYXJcIilcclxuICAgICAgLmF0dHIoXCJpZFwiLCBcInNlYXJjaFwiKVxyXG4gICAgICAuYXR0cihcInR5cGVcIiwgXCJ0ZXh0XCIpXHJcbiAgICAgIC5hdHRyKFwicGxhY2Vob2xkZXJcIiwgXCJGaW5kIGFuIGFydGlzdC4uLlwiKTtcclxuXHJcbiAgZDN2My5zZWxlY3QoJy5idWJibGVfbWFpbl90aXRsZScpXHJcbiAgLmFwcGVuZCgnZycpXHJcbiAgICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXHJcbiAgICAgIC5hdHRyKFwieFwiLCB3aW5kb3cuaW5uZXJXaWR0aCAvMikgICAgICAgICAgICAgXHJcbiAgICAgIC5hdHRyKFwieVwiLCAwIC0gKHdpbmRvdy5pbm5lckhlaWdodC8xMSkpXHJcbiAgICAgIC5zdHlsZSgnY29sb3InLCAnYmxhY2snKSBcclxuICAgICAgLnN0eWxlKCdmb250LXNpemUnLCAnNTBweCcpXHJcbiAgICAgIC5zdHlsZSgndGV4dC1hbGlnbicsICdjZW50ZXInKVxyXG4gICAgICAudGV4dChcIlRoZSBNb3N0IFBvcHVsYXIgQXJ0aXN0c1wiKTtcclxuXHJcbiAgZDN2My5zZWxlY3QoXCIjc2VhcmNoXCIpXHJcbiAgICAgIC5vbihcImtleXVwXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblxyXG4gICAgICAgIHZhciBzZWFyY2hlZF9kYXRhID0gbm9kZXMsXHJcbiAgICAgICAgICAgIHRleHQgPSB0aGlzLnZhbHVlLnRyaW0oKTtcclxuICAgICAgICBpZiAodGV4dCAhPSBcIlwiICYgdGV4dCAhPSBcIm5vbmVcIikge1xyXG5cclxuICAgICAgICAgICAgdmFyIHNlYXJjaFJlc3VsdHMgPSBzZWFyY2hlZF9kYXRhLm1hcChmdW5jdGlvbihyKSB7XHJcbiAgICAgICAgICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoXCJeXCIgKyB0ZXh0ICsgXCIuKlwiLCBcImlcIik7XHJcbiAgICAgICAgICAgIGlmIChyZWdleC50ZXN0KHIubmFtZSkpIHsgLy8gaWYgdGhlcmUgYXJlIGFueSByZXN1bHRzXHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2V4LmV4ZWMoci5uYW1lKVswXTsgLy8gcmV0dXJuIHRoZW0gdG8gc2VhcmNoUmVzdWx0c1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgLy8gZmlsdGVyIGJsYW5rIGVudHJpZXMgZnJvbSBzZWFyY2hSZXN1bHRzXHJcbiAgICAgICAgICBzZWFyY2hSZXN1bHRzID0gc2VhcmNoUmVzdWx0cy5maWx0ZXIoZnVuY3Rpb24ocil7XHJcbiAgICAgICAgICAgIHJldHVybiByICE9IHVuZGVmaW5lZDtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgLy8gZmlsdGVyIGRhdGFzZXQgd2l0aCBzZWFyY2hSZXN1bHRzXHJcbiAgICAgICAgICBzZWFyY2hlZF9kYXRhID0gc2VhcmNoUmVzdWx0cy5tYXAoZnVuY3Rpb24ocikge1xyXG4gICAgICAgICAgICAgcmV0dXJuIG5vZGVzLmZpbHRlcihmdW5jdGlvbihwKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHAubmFtZS5pbmRleE9mKHIpICE9IC0xO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIC8vIGZsYXR0ZW4gYXJyYXlcclxuICAgICAgICAgIHNlYXJjaGVkX2RhdGEgPSBbXS5jb25jYXQuYXBwbHkoW10sIHNlYXJjaGVkX2RhdGEpOyAvLyBUaGlzIGZpbmRzIHRoZSBkYXRhIHdlIHdhbnRcclxuICAgICAgICAgICAgLy8gZGF0YSBiaW5kIHdpdGggbmV3IGRhdGFcclxuICAgICAgICAgIHNlbGJ1YmJsZXMgPSBidWJibGVzLnNlbGVjdEFsbCgnLmJ1YmJsZS1jaXJjbGUnKS5kYXRhKHNlYXJjaGVkX2RhdGEsIGZ1bmN0aW9uKGQpeyByZXR1cm4gZC5uYW1lfSk7XHJcbiAgICAgICAgICAvLyBTdHlsZSBzZWxlY3Qgbm9kZXNcclxuICAgICAgICAgIHNlbGJ1YmJsZXNcclxuICAgICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywgLjc1KVxyXG4gICAgICAgICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgMy41KVxyXG4gICAgICAgICAgICAuYXR0cignc3Ryb2tlJywgJ2JsYWNrJyk7XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkM3YzLnNlbGVjdEFsbCgnLmJ1YmJsZS1jaXJjbGUnKVxyXG4gICAgICAgICAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIDEpXHJcbiAgICAgICAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCAuNSlcclxuICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZScsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkM3YzLnJnYihmaWxsQ29sb3IyKGQuZ2VucmUpKS5kYXJrZXIoKTsgfSk7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2VsYnViYmxlc1xyXG4gICAgICAgIC5leGl0KClcclxuICAgICAgICAgICAgLnN0eWxlKFwib3BhY2l0eVwiLCAuNzUpXHJcbiAgICAgICAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCAuNSlcclxuICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZScsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkM3YzLnJnYihmaWxsQ29sb3IyKGQuZ2VucmUpKS5kYXJrZXIoKTsgfSk7XHJcblxyXG5cclxuXHJcbiAgICAgIH0pO1xyXG4gIC8qXHJcbiAgICogU2V0cyB2aXN1YWxpemF0aW9uIGluIFwic2luZ2xlIGdyb3VwIG1vZGVcIi5cclxuICAgKiBUaGUgeWVhciBsYWJlbHMgYXJlIGhpZGRlbiBhbmQgdGhlIGZvcmNlIGxheW91dFxyXG4gICAqIHRpY2sgZnVuY3Rpb24gaXMgc2V0IHRvIG1vdmUgYWxsIG5vZGVzIHRvIHRoZVxyXG4gICAqIGNlbnRlciBvZiB0aGUgdmlzdWFsaXphdGlvbi5cclxuICAgKi9cclxuICBmdW5jdGlvbiBncm91cEJ1YmJsZXMoKSB7XHJcbiAgICBoaWRlWWVhcnMoKTtcclxuICAgIGhpZGVVc2UoKTtcclxuICAgIHNob3dHZW5yZSgpO1xyXG5cclxuICAgIGZvcmNlLm9uKCd0aWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgaWYgKGUuYWxwaGEgPj0gLjAzKSB7XHJcbiAgICAgICAgYnViYmxlcy5lYWNoKG1vdmVUb0dlbnJlKDEuMDUqZS5hbHBoYSkpXHJcbiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKGQpIHtcclxuICAgICAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIitkLngrXCIsXCIrZC55K1wiKVwiO1xyXG4gICAgICAgIH0pIFxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gY2FsbCBzdG9wIHNvIHRpY2sgdmFsdWVzIHN0b3AgZ2V0dGluZyB1cGRhdGVkIC0gb3RoZXJ3aXNlIHRoZXkgdHJhbnNpdGlvbnMgd2lsbCBvY2N1ciBmcm9tIGRpZmZlcmVudCBkLngsZC55IHZhbHVlc1xyXG4gICAgICAgICAgICBmb3JjZS5zdG9wKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBcclxuICAgIH0pO1xyXG5cclxuICAgIGZvcmNlLnN0YXJ0KCk7XHJcblxyXG4gICBcclxuICB9XHJcblxyXG5cclxuICBmdW5jdGlvbiBtb3ZlVG9DZW50ZXIoYWxwaGEpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoZCkge1xyXG4gICAgICBkLnggPSBkLnggKyAoY2VudGVyLnggLSBkLngpICogZGFtcGVyICogYWxwaGE7XHJcbiAgICAgIGQueSA9IGQueSArIChjZW50ZXIueSAtIGQueSkgKiBkYW1wZXIgKiBhbHBoYTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuXHJcbiAgZnVuY3Rpb24gc3BsaXRCdWJibGVzKCkge1xyXG4gICAgc2hvd1llYXJzKCk7XHJcblxyXG4gICAgZm9yY2Uub24oJ3RpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBidWJibGVzLmVhY2gobW92ZVRvWWVhcnMoZS5hbHBoYSkpXHJcbiAgICAgICAgLmF0dHIoJ2N4JywgZnVuY3Rpb24gKGQpIHtyZXR1cm4gZC54OyB9KVxyXG4gICAgICAgIC5hdHRyKCdjeScsIGZ1bmN0aW9uIChkKSB7cmV0dXJuIGQueTsgfSk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgZm9yY2Uuc3RhcnQoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNwbGl0QnViYmxlc1VzZSgpIHtcclxuICAgIGhpZGVHZW5yZSgpO1xyXG4gICAgc2hvd1VzZSgpO1xyXG5cclxuICAgIGZvcmNlLm9uKCd0aWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgYnViYmxlcy5lYWNoKG1vdmVUb1VzZShlLmFscGhhKSlcclxuICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKGQpIHtcclxuICAgICAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIitkLngrXCIsXCIrZC55K1wiKVwiO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgZm9yY2Uuc3RhcnQoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNwbGl0QnViYmxlc0dlbnJlKCkge1xyXG4gICAgaGlkZVVzZSgpO1xyXG4gICAgc2hvd0dlbnJlKCk7XHJcblxyXG4gICAgZm9yY2Uub24oJ3RpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBidWJibGVzLmVhY2gobW92ZVRvR2VucmUoZS5hbHBoYSkpXHJcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uIChkKSB7XHJcbiAgICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIrZC54K1wiLFwiK2QueStcIilcIjtcclxuICAgICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG4gICAgZm9yY2Uuc3RhcnQoKTtcclxuICB9XHJcblxyXG5cclxuICAvKlxyXG4gICAqIEhlbHBlciBmdW5jdGlvbiBmb3IgXCJzcGxpdCBieSB5ZWFyIG1vZGVcIi5cclxuICAgKiBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB0YWtlcyB0aGUgZGF0YSBmb3IgYVxyXG4gICAqIHNpbmdsZSBub2RlIGFuZCBhZGp1c3RzIHRoZSBwb3NpdGlvbiB2YWx1ZXNcclxuICAgKiBvZiB0aGF0IG5vZGUgdG8gbW92ZSBpdCB0aGUgeWVhciBjZW50ZXIgZm9yIHRoYXRcclxuICAgKiBub2RlLlxyXG4gICAqXHJcbiAgICogUG9zaXRpb25pbmcgaXMgYWRqdXN0ZWQgYnkgdGhlIGZvcmNlIGxheW91dCdzXHJcbiAgICogYWxwaGEgcGFyYW1ldGVyIHdoaWNoIGdldHMgc21hbGxlciBhbmQgc21hbGxlciBhc1xyXG4gICAqIHRoZSBmb3JjZSBsYXlvdXQgcnVucy4gVGhpcyBtYWtlcyB0aGUgaW1wYWN0IG9mXHJcbiAgICogdGhpcyBtb3ZpbmcgZ2V0IHJlZHVjZWQgYXMgZWFjaCBub2RlIGdldHMgY2xvc2VyIHRvXHJcbiAgICogaXRzIGRlc3RpbmF0aW9uLCBhbmQgc28gYWxsb3dzIG90aGVyIGZvcmNlcyBsaWtlIHRoZVxyXG4gICAqIG5vZGUncyBjaGFyZ2UgZm9yY2UgdG8gYWxzbyBpbXBhY3QgZmluYWwgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gbW92ZVRvWWVhcnMoYWxwaGEpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoZCkge1xyXG4gICAgICB2YXIgdGFyZ2V0ID0geWVhckNlbnRlcnNbZC55ZWFyXTtcclxuICAgICAgZC54ID0gZC54ICsgKHRhcmdldC54IC0gZC54KSAqIGRhbXBlciAqIGFscGhhICogMS4xO1xyXG4gICAgICBkLnkgPSBkLnkgKyAodGFyZ2V0LnkgLSBkLnkpICogZGFtcGVyICogYWxwaGEgKiAxLjE7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLypcclxuICAgKiBIaWRlcyBZZWFyIHRpdGxlIGRpc3BsYXlzLlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGhpZGVZZWFycygpIHtcclxuICAgIHN2Zy5zZWxlY3RBbGwoJy55ZWFyJykucmVtb3ZlKCk7XHJcbiAgfVxyXG5cclxuICAvKlxyXG4gICAqIFNob3dzIFllYXIgdGl0bGUgZGlzcGxheXMuXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gc2hvd1llYXJzKCkge1xyXG4gICAgLy8gQW5vdGhlciB3YXkgdG8gZG8gdGhpcyB3b3VsZCBiZSB0byBjcmVhdGVcclxuICAgIC8vIHRoZSB5ZWFyIHRleHRzIG9uY2UgYW5kIHRoZW4ganVzdCBoaWRlIHRoZW0uXHJcbiAgICB2YXIgeWVhcnNEYXRhID0gZDN2My5rZXlzKHllYXJzVGl0bGVYKTtcclxuICAgIHZhciB5ZWFycyA9IHN2Zy5zZWxlY3RBbGwoJy55ZWFyJylcclxuICAgICAgLmRhdGEoeWVhcnNEYXRhKTtcclxuXHJcbiAgICB5ZWFycy5lbnRlcigpLmFwcGVuZCgndGV4dCcpXHJcbiAgICAgIC5hdHRyKCdjbGFzcycsICd5ZWFyJylcclxuICAgICAgLmF0dHIoJ3gnLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4geWVhcnNUaXRsZVhbZF07IH0pXHJcbiAgICAgIC5hdHRyKCd5JywgNDApXHJcbiAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKVxyXG4gICAgICAudGV4dChmdW5jdGlvbiAoZCkgeyByZXR1cm4gZDsgfSk7XHJcbiAgfVxyXG5cclxuXHJcbiAgZnVuY3Rpb24gbW92ZVRvVXNlKGFscGhhKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQpIHtcclxuICAgICAgdmFyIHRhcmdldCA9IHVzZUNlbnRlcnNbZC5ncm91cF07XHJcbiAgICAgIGQueCA9IGQueCArICh0YXJnZXQueCAtIGQueCkgKiBkYW1wZXIgKiBhbHBoYSAqIDEuMTtcclxuICAgICAgZC55ID0gZC55ICsgKHRhcmdldC55IC0gZC55KSAqIGRhbXBlciAqIGFscGhhICogMS4xO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgICogSGlkZXMgWWVhciB0aXRsZSBkaXNwbGF5cy5cclxuICAgKi9cclxuICBmdW5jdGlvbiBoaWRlVXNlKCkge1xyXG4gICAgc3ZnLnNlbGVjdEFsbCgnLnllYXInKS5yZW1vdmUoKTtcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgICogU2hvd3MgWWVhciB0aXRsZSBkaXNwbGF5cy5cclxuICAgKi9cclxuICBmdW5jdGlvbiBzaG93VXNlKCkge1xyXG4gICAgLy8gQW5vdGhlciB3YXkgdG8gZG8gdGhpcyB3b3VsZCBiZSB0byBjcmVhdGVcclxuICAgIC8vIHRoZSB5ZWFyIHRleHRzIG9uY2UgYW5kIHRoZW4ganVzdCBoaWRlIHRoZW0uXHJcbiAgICB2YXIgdXNlRGF0YSA9IGQzdjMua2V5cyh1c2VUaXRsZVgpO1xyXG4gICAgdmFyIHVzZSA9IHN2Zy5zZWxlY3RBbGwoJy5ncm91cCcpXHJcbiAgICAgIC5kYXRhKHVzZURhdGEpO1xyXG5cclxuICAgIHVzZS5lbnRlcigpLmFwcGVuZCgndGV4dCcpXHJcbiAgICAgIC5hdHRyKCdjbGFzcycsICd5ZWFyJylcclxuICAgICAgLmF0dHIoJ3gnLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gdXNlVGl0bGVYW2RdOyB9KVxyXG4gICAgICAuYXR0cigneScsIGhlaWdodCAvIDExKVxyXG4gICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJylcclxuICAgICAgLnRleHQoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQ7IH0pO1xyXG4gIH1cclxuXHJcblxyXG4gIGZ1bmN0aW9uIG1vdmVUb0dlbnJlKGFscGhhKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQpIHtcclxuICAgICAgdmFyIHRhcmdldCA9IGdlbnJlQ2VudGVyc1tkLmdlbnJlXTtcclxuICAgICAgZC54ID0gZC54ICsgKHRhcmdldC54IC0gZC54KSAqIGRhbXBlciAqIGFscGhhICogMS4xO1xyXG4gICAgICBkLnkgPSBkLnkgKyAodGFyZ2V0LnkgLSBkLnkpICogZGFtcGVyICogYWxwaGEgKiAxLjE7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLypcclxuICAgKiBIaWRlcyBZZWFyIHRpdGxlIGRpc3BsYXlzLlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGhpZGVHZW5yZSgpIHtcclxuICAgIHN2Zy5zZWxlY3RBbGwoJy50aXRsZScpLnJlbW92ZSgpO1xyXG4gICAgc3ZnLnNlbGVjdEFsbCgnLmJ1YmJsZS1sYWJlbCcpXHJcbiAgICAgICAgLmF0dHIoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XHJcblxyXG4gICAgLy8gZDMuc2VsZWN0QWxsKCcuYnViYmxlLWF4aXMtdGV4dCcpXHJcbiAgICAvLyAgICAgLy8gLmF0dHIoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJylcclxuICAgIC8vICAgICAudHJhbnNpdGlvbigpXHJcbiAgICAvLyAgICAgLmR1cmF0aW9uKDM2MDApXHJcbiAgICAvLyAgICAgLnN0eWxlKCdvcGFjaXR5JywgLjUpO1xyXG4gICAgLy8gc2hvdyBwb3B1bGFyaXR5IGF4aXNcclxuICAgIC8vIGQzLnNlbGVjdCgnLmJ1YmJsZS1heGlzJylcclxuICAgIC8vICAgICAuYXR0cigndmlzaWJpbGl0eScsICd2aXNpYmxlJylcclxuICAgIC8vICAgICAudHJhbnNpdGlvbigpXHJcbiAgICAvLyAgICAgLmR1cmF0aW9uKDMwMDApXHJcbiAgICAvLyAgICAgLmF0dHIoXCJ4MlwiLCB3aWR0aCAvIDIpXHJcbiAgICAvLyAgICAgLmF0dHIoXCJ5MlwiLCBoZWlnaHQgLyAxMSlcclxuICAgIC8vICAgICAvLyAuYXR0cihcIm1hcmtlci1lbmRcIiwgXCJ1cmwoI2Fycm93KVwiKVxyXG4gICAgLy8gICAgIC5zdHlsZSgnb3BhY2l0eScsIC41KTtcclxuXHJcbiAgfVxyXG5cclxuICAvKlxyXG4gICAqIFNob3dzIFllYXIgdGl0bGUgZGlzcGxheXMuXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gc2hvd0dlbnJlKCkge1xyXG4gICAgLy8gQW5vdGhlciB3YXkgdG8gZG8gdGhpcyB3b3VsZCBiZSB0byBjcmVhdGVcclxuICAgIC8vIHRoZSB5ZWFyIHRleHRzIG9uY2UgYW5kIHRoZW4ganVzdCBoaWRlIHRoZW0uXHJcbiAgICB2YXIgZ2VucmVEYXRhID0gZDN2My5rZXlzKGdlbnJlVGl0bGVYKTtcclxuICAgIHZhciBnZW5yZSA9IHN2Zy5zZWxlY3RBbGwoJy5nZW5yZScpXHJcbiAgICAgIC5kYXRhKGdlbnJlRGF0YSk7XHJcblxyXG5cclxuICAgIGdlbnJlLmVudGVyKCkuYXBwZW5kKCd0ZXh0JylcclxuICAgICAgLmF0dHIoJ2NsYXNzJywgJ3RpdGxlJylcclxuICAgICAgLmF0dHIoJ3gnLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZ2VucmVUaXRsZVhbZF07IH0pXHJcbiAgICAgIC5hdHRyKCd5JywgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGdlbnJlVGl0bGVZW2RdOyB9KVxyXG4gICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJylcclxuICAgICAgLnRleHQoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQ7IH0pO1xyXG5cclxuICAgIHN2Zy5zZWxlY3RBbGwoJy5idWJibGUtbGFiZWwnKVxyXG4gICAgICAgIC5hdHRyKCd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKTtcclxuICAgIC8vIGhpZGUgcG9wdWxhcml0eSBheGlzXHJcbiAgICBkMy5zZWxlY3QoJy5idWJibGUtYXhpcycpXHJcbiAgICAgICAgLmF0dHIoXCJ4MlwiLCB3aWR0aCAvIDcpXHJcbiAgICAgICAgLmF0dHIoXCJ5MlwiLCBoZWlnaHQgLyAxMSlcclxuICAgICAgICAuYXR0cigndmlzaWJpbGl0eScsICdoaWRkZW4nKVxyXG4gICAgICAgIDtcclxuXHJcbiAgICBkMy5zZWxlY3RBbGwoJy5idWJibGUtYXhpcy10ZXh0JylcclxuICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAwKTtcclxuICB9XHJcblxyXG5cclxuICAvKlxyXG4gICAqIEZ1bmN0aW9uIGNhbGxlZCBvbiBtb3VzZW92ZXIgdG8gZGlzcGxheSB0aGVcclxuICAgKiBkZXRhaWxzIG9mIGEgYnViYmxlIGluIHRoZSB0b29sdGlwLlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHNob3dEZXRhaWwoZCkge1xyXG4gICAgLy8gY2hhbmdlIG91dGxpbmUgdG8gaW5kaWNhdGUgaG92ZXIgc3RhdGUuXHJcbiAgICBsZXQgc3Ryb2t3aWQgPSBkM3YzLnNlbGVjdCh0aGlzKS5hdHRyKCdzdHJva2Utd2lkdGgnKTtcclxuICAgIGQzdjMuc2VsZWN0KHRoaXMpLmF0dHIoJ3N0cm9rZScsICdibGFjaycpXHJcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIHN0cm9rd2lkID09IDMuNSA/IDMuNSA6IDIuNClcclxuICAgICAgICAgICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAuNzUpXHJcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3InLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZC5yYWRpdXMgKyA1OyB9KTtcclxuXHJcbiAgICB2YXIgY29udGVudCA9IFxyXG4gICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInR0dGV4dFwiPjxzcGFuIGNsYXNzPVwibmFtZVwiPkFydGlzdDogPC9zcGFuPjxzcGFuIGNsYXNzPVwidmFsdWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgZC5uYW1lICtcclxuICAgICAgICAgICAgICAgICAgJzwvc3Bhbj48YnIvPicgK1xyXG4gICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCJuYW1lXCI+QW1vdW50IFVzZWQ6IDwvc3Bhbj48c3BhbiBjbGFzcz1cInZhbHVlXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgIGQudmFsdWUgK1xyXG4gICAgICAgICAgICAgICAgICAnPC9zcGFuPjxici8+JyArXHJcbiAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cIm5hbWVcIj5HZW5yZTogPC9zcGFuPjxzcGFuIGNsYXNzPVwidmFsdWVcIj4nICtcclxuICAgICAgICAgICAgICAgICAgZC5nZW5yZSArXHJcbiAgICAgICAgICAgICAgICAgICc8L3NwYW4+PGJyLz48L2Rpdj4nO1xyXG4gICAgdG9vbHRpcC5zaG93VG9vbHRpcChjb250ZW50LCBkM3YzLmV2ZW50KTtcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgICogSGlkZXMgdG9vbHRpcFxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGhpZGVEZXRhaWwoZCkge1xyXG4gICAgLy8gcmVzZXQgb3V0bGluZVxyXG4gICAgbGV0IHN0cm9rd2lkID0gZDN2My5zZWxlY3QodGhpcykuYXR0cignc3Ryb2tlLXdpZHRoJyk7XHJcbiAgICBkM3YzLnNlbGVjdCh0aGlzKVxyXG4gICAgICAvLyAuYXR0cignc3Ryb2tlJywgZDN2My5yZ2IoZmlsbENvbG9yMihkLmdlbnJlKSkuZGFya2VyKCkpXHJcbiAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCBzdHJva3dpZCA9PSAzLjUgPyAzLjUgOiAuNSlcclxuICAgICAgLmF0dHIoJ3N0cm9rZScsIGZ1bmN0aW9uIChkKSB7IFxyXG4gICAgICAgIGlmIChzdHJva3dpZCA9PSAzLjUpIHtcclxuICAgICAgICAgIHJldHVybiAnYmxhY2snOyBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIGQzdjMucmdiKGZpbGxDb2xvcjIoZC5nZW5yZSkpLmRhcmtlcigpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLnN0eWxlKCdvcGFjaXR5JywgLjc1KVxyXG4gICAgICAuYXR0cignZmlsbCcsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBmaWxsQ29sb3IyKGQuZ2VucmUpOyB9KVxyXG4gICAgICAuYXR0cigncicsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLnJhZGl1czsgfSk7XHJcblxyXG4gICAgdG9vbHRpcC5oaWRlVG9vbHRpcCgpO1xyXG4gIH1cclxuXHJcbiAgLypcclxuICAgKiBFeHRlcm5hbGx5IGFjY2Vzc2libGUgZnVuY3Rpb24gKHRoaXMgaXMgYXR0YWNoZWQgdG8gdGhlXHJcbiAgICogcmV0dXJuZWQgY2hhcnQgZnVuY3Rpb24pLiBBbGxvd3MgdGhlIHZpc3VhbGl6YXRpb24gdG8gdG9nZ2xlXHJcbiAgICogYmV0d2VlbiBcInNpbmdsZSBncm91cFwiIGFuZCBcInNwbGl0IGJ5IHllYXJcIiBtb2Rlcy5cclxuICAgKlxyXG4gICAqIGRpc3BsYXlOYW1lIGlzIGV4cGVjdGVkIHRvIGJlIGEgc3RyaW5nIGFuZCBlaXRoZXIgJ3llYXInIG9yICdhbGwnLlxyXG4gICAqL1xyXG4gIGNoYXJ0LnRvZ2dsZURpc3BsYXkgPSBmdW5jdGlvbiAoZGlzcGxheU5hbWUpIHtcclxuICAgIGlmIChkaXNwbGF5TmFtZSA9PT0gJ3llYXInKSB7XHJcbiAgICAgIHNwbGl0QnViYmxlcygpO1xyXG4gICAgfSBlbHNlIGlmIChkaXNwbGF5TmFtZSA9PSAndXNlJykge1xyXG4gICAgICBzcGxpdEJ1YmJsZXNVc2UoKTtcclxuICAgIH0gZWxzZSBpZiAoZGlzcGxheU5hbWUgPT0gJ2dlbnJlJykge1xyXG4gICAgICBzcGxpdEJ1YmJsZXNHZW5yZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZ3JvdXBCdWJibGVzKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcblxyXG4gIC8vIHJldHVybiB0aGUgY2hhcnQgZnVuY3Rpb24gZnJvbSBjbG9zdXJlLlxyXG4gIHJldHVybiBjaGFydDtcclxufVxyXG5cclxuLypcclxuICogQmVsb3cgaXMgdGhlIGluaXRpYWxpemF0aW9uIGNvZGUgYXMgd2VsbCBhcyBzb21lIGhlbHBlciBmdW5jdGlvbnNcclxuICogdG8gY3JlYXRlIGEgbmV3IGJ1YmJsZSBjaGFydCBpbnN0YW5jZSwgbG9hZCB0aGUgZGF0YSwgYW5kIGRpc3BsYXkgaXQuXHJcbiAqL1xyXG5cclxudmFyIG15QnViYmxlQ2hhcnQgPSBidWJibGVDaGFydCgpO1xyXG5cclxuLypcclxuICogRnVuY3Rpb24gY2FsbGVkIG9uY2UgZGF0YSBpcyBsb2FkZWQgZnJvbSBDU1YuXHJcbiAqIENhbGxzIGJ1YmJsZSBjaGFydCBmdW5jdGlvbiB0byBkaXNwbGF5IGluc2lkZSAjdmlzIGRpdi5cclxuICovXHJcbmZ1bmN0aW9uIGRpc3BsYXkoZXJyb3IsIGRhdGEpIHtcclxuICBpZiAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICB9XHJcblxyXG4gIG15QnViYmxlQ2hhcnQoJyN2aXMnLCBkYXRhKTtcclxufVxyXG5cclxuLypcclxuICogU2V0cyB1cCB0aGUgbGF5b3V0IGJ1dHRvbnMgdG8gYWxsb3cgZm9yIHRvZ2dsaW5nIGJldHdlZW4gdmlldyBtb2Rlcy5cclxuICovXHJcbmZ1bmN0aW9uIHNldHVwQnV0dG9ucygpIHtcclxuICBkM3YzLnNlbGVjdCgnI3Rvb2xiYXInKVxyXG4gICAgLnNlbGVjdEFsbCgnLmJ1dHRvbicpXHJcbiAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyBSZW1vdmUgYWN0aXZlIGNsYXNzIGZyb20gYWxsIGJ1dHRvbnNcclxuICAgICAgZDN2My5zZWxlY3RBbGwoJy5idXR0b24nKS5jbGFzc2VkKCdhY3RpdmUnLCBmYWxzZSk7XHJcbiAgICAgIC8vIEZpbmQgdGhlIGJ1dHRvbiBqdXN0IGNsaWNrZWRcclxuICAgICAgdmFyIGJ1dHRvbiA9IGQzdjMuc2VsZWN0KHRoaXMpO1xyXG5cclxuICAgICAgLy8gU2V0IGl0IGFzIHRoZSBhY3RpdmUgYnV0dG9uXHJcbiAgICAgIGJ1dHRvbi5jbGFzc2VkKCdhY3RpdmUnLCB0cnVlKTtcclxuXHJcbiAgICAgIC8vIEdldCB0aGUgaWQgb2YgdGhlIGJ1dHRvblxyXG4gICAgICB2YXIgYnV0dG9uSWQgPSBidXR0b24uYXR0cignaWQnKTtcclxuXHJcbiAgICAgIC8vIFRvZ2dsZSB0aGUgYnViYmxlIGNoYXJ0IGJhc2VkIG9uXHJcbiAgICAgIC8vIHRoZSBjdXJyZW50bHkgY2xpY2tlZCBidXR0b24uXHJcbiAgICAgIG15QnViYmxlQ2hhcnQudG9nZ2xlRGlzcGxheShidXR0b25JZCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbi8vIExvYWQgdGhlIGRhdGEuXHJcbmQzdjMuY3N2KCdhc3NldHMvc291bmR0cmFja19kYXRhLmNzdicsIGRpc3BsYXkpO1xyXG5cclxuLy8gc2V0dXAgdGhlIGJ1dHRvbnMuXHJcbnNldHVwQnV0dG9ucygpO1xyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyBpbml0LCByZXNpemUgfTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2J1YmJsZXMuanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUdBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUVBO0FBRkE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFUQTtBQUNBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFHQTs7Ozs7Ozs7Ozs7O0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQVlBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFLQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBWkE7QUFDQTtBQWdCQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBU0E7QUFDQTtBQUVBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUdBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBSUE7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FBY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFHQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUFBO0FBR0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBS0E7QUFFQTtBQUNBO0FBRUE7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUFDQTtBQUNBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction resize() {}\n\nfunction init() {\n\n  var WaffleChart = function WaffleChart() {\n\n    var $_selector, $_title, $_data, $_label, $_cellSize, $_cellGap, $_rows, $_columns, $_rounded, $_keys, $_useWidth, $_useLegend;\n\n    var defaults = {\n      size: 6,\n      rows: 50,\n      columns: 100,\n      rounded: false,\n      gap: 2,\n      useLegend: false\n    };\n\n    function generatedWaffleChart() {\n\n      $_keys = d3v3.keys($_data[0]);\n\n      var obj = {\n        selector: $_selector,\n        title: $_title,\n        data: $_data,\n        label: $_label,\n        size: $_cellSize,\n        gap: $_cellGap,\n        rows: $_rows,\n        columns: $_columns,\n        rounded: $_rounded\n      };\n\n      drawWaffleChart(obj);\n    }\n\n    function drawWaffleChart(_obj) {\n\n      if (!_obj.size) {\n        _obj.size = defaults.size;\n      }\n      if (!_obj.rows) {\n        _obj.rows = defaults.rows;\n      }\n      if (!_obj.columns) {\n        _obj.columns = defaults.columns;\n      }\n      if (_obj.gap === undefined) {\n        _obj.gap = defaults.gap;\n      }\n      if (_obj.rounded === undefined) {\n        _obj.columns = defaults.rounded;\n      }\n\n      var formattedData = [];\n      var domain = [];\n      var value = $_keys[$_keys.length - 2];\n      var total = d3v3.sum(_obj.data, function (d) {\n        return d[value];\n      });\n\n      if ($_useWidth) {\n        var forcedWidth = d3v3.select(_obj.selector).node().getBoundingClientRect().width;\n        _obj.columns = Math.floor(forcedWidth / (_obj.size + _obj.gap));\n      }\n\n      var squareVal = total / (_obj.rows * _obj.columns);\n\n      _obj.data.forEach(function (d, i) {\n        d[value] = +d[value];\n        d.units = Math.floor(d[value] / squareVal);\n        Array(d.units + 1).join(1).split('').map(function () {\n          formattedData.push({\n            squareVal: squareVal,\n            units: d.units,\n            value: d[value],\n            groupIndex: i\n          });\n        });\n        domain.push(d[$_keys[0]]);\n      });\n\n      var red = \"#CE2A23\";\n\n      var colorMap = {\n        'Indie/Alternative': 0,\n        'Classic Rock': 1,\n        'Hip Hop': 2, //3th\n        'Punk': 3, //4th\n        'Metal': 4, //5th\n        'Electronic': 5,\n        'Jazz/Soul': 6,\n        'Other': 7 //1\n      };\n\n      var color = d3v3.scale.ordinal()\n      // .domain([0, _obj.data.length - 1]) >> changed this\n      .domain([0, 1, 2, 3, 4, 5, 6, 7]).range(['#ccebc5', '#f2f2f2', '#fbb4ae', '#fed9a6', '#fddaec', '#decbe4', '#f9f9bb', '#b3cde3']);\n\n      //if (_obj.label) {\n      d3v3.select(_obj.selector).append(\"div\").attr(\"class\", \"label\").text(_obj.label);\n      //}\n\n      // set up title\n      var title = d3v3.select($_selector).append(\"div\");\n\n      // add legend\n      if ($_useLegend) {\n        var legend = d3v3.select('.waffle_legend').append(\"div\").attr(\"class\", \"legend\");\n\n        var legendItem = legend.selectAll(\"div\").data(_obj.data);\n\n        legendItem.enter().append(\"div\").attr(\"class\", function (d, i) {\n          return \"legend_item legend_item_\" + (i + 1);\n        });\n\n        var legendIcon = legendItem.append(\"div\").attr(\"class\", \"legend_item_icon\").style(\"background-color\", function (d, i) {\n          return color(i);\n          // }\n        });\n\n        if (_obj.rounded) {\n          legendIcon.style(\"border-radius\", \"100%\"); // circles\n        }\n\n        legendItem.append(\"span\").attr(\"class\", \"legend_item_text\").text(function (d) {\n          return d[$_keys[0]];\n        });\n      }\n\n      var width = _obj.size * _obj.columns + _obj.columns * _obj.gap - _obj.gap;\n      var height = _obj.size * _obj.rows + _obj.rows * _obj.gap - _obj.gap;\n\n      if ($_useWidth) {\n        width = d3v3.select(_obj.selector).node().getBoundingClientRect().width;\n      }\n\n      var svg = d3v3.selectAll(_obj.selector).append(\"svg\").attr(\"class\", \"waffle\").attr(\"width\", width).attr(\"height\", height);\n\n      var g = svg.append(\"g\").attr(\"transform\", \"translate(0,0)\");\n\n      // insert dem items\n\n      var item = g.selectAll(\".unit\").data(formattedData);\n\n      item.enter().append(\"rect\").attr(\"class\", \"unit\").attr(\"width\", _obj.size).attr(\"height\", _obj.size).attr(\"fill\", function (d) {\n        return color(d.groupIndex);\n      })\n      // .on('mouseover', mouseover)\n      .attr(\"x\", function (d, i) {\n        var col = Math.floor(i / _obj.rows);\n        return col * _obj.size + col * _obj.gap;\n      }).attr(\"y\", function (d, i) {\n        var row = i % _obj.rows;\n        return _obj.rows * (_obj.size + _obj.gap) - (row * _obj.size + row * _obj.gap) - _obj.size - _obj.gap;\n      }).append(\"title\").text(function (d, i) {\n        return _obj.data[d.groupIndex][$_keys[0]] + \": \" + Math.round(d.units / formattedData.length * 100) + \"%\";\n      }).attr(\"stroke\", \"black\").attr(\"stroke-width\", 2);\n\n      // tooltip\n      var tooltip = d3.select($_selector).append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n      if (_obj.rounded) {\n        item.attr(\"rx\", _obj.size / 2).attr(\"ry\", _obj.size / 2);\n      }\n\n      title.append('g').append(\"text\").attr('class', 'waffle_title').attr(\"x\", width / 2).attr(\"y\", 0 - height / 11).style('color', 'black').text($_title);\n    }\n\n    generatedWaffleChart.selector = function (value) {\n      if (!arguments.length) {\n        return $_selector;\n      }\n      $_selector = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.title = function (value) {\n      if (!arguments.length) {\n        return $_title;\n      }\n      $_title = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.data = function (value) {\n      if (!arguments.length) {\n        return $_data;\n      }\n      $_data = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.useWidth = function (value) {\n      if (!arguments.length) {\n        return $_useWidth;\n      }\n      $_useWidth = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.useLegend = function (value) {\n      if (!arguments.length) {\n        return $_useLegend;\n      }\n      $_useLegend = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.label = function (value) {\n      if (!arguments.length) {\n        return $_label;\n      }\n      $_label = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.size = function (value) {\n      if (!arguments.length) {\n        return $_cellSize;\n      }\n      $_cellSize = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.gap = function (value) {\n      if (!arguments.length) {\n        return $_cellGap;\n      }\n      $_cellGap = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.rows = function (value) {\n      if (!arguments.length) {\n        return $_rows;\n      }\n      $_rows = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.columns = function (value) {\n      if (!arguments.length) {\n        return $_columns;\n      }\n      $_columns = value;\n      return generatedWaffleChart;\n    };\n\n    generatedWaffleChart.rounded = function (value) {\n      if (!arguments.length) {\n        return $_rounded;\n      }\n      $_rounded = value;\n      return generatedWaffleChart;\n    };\n\n    return generatedWaffleChart;\n  };\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == '411';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_1\").title('411').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == '917';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_13\").title('917').data(data).useWidth(false).useLegend(true).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'adidas';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_25\").title('Adidas').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'aws';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_37\").title('Alien Workshop').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'almost';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_2\").title('Almost').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'antihero';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_14\").title('Anti Hero').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'bacon';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_26\").title('Bacon').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'baker';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_38\").title('Baker').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'birdhouse';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_3\").title('Birdhouse').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'blacklabel';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_15\").title('Black Label').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'blind';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_27\").title('Blind').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'bloodwizard';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_39\").title('Blood Wizard').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'blueprint';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_4\").title('Blueprint').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'chocolate';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_16\").title('Chocolate').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'cliche';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_28\").title('Cliché').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'consolidated';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_40\").title('Consolidated').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'creature';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_5\").title('Creature').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'dc';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_17\").title('DC Shoes').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'deathwish';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_29\").title('Deathwish').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'dgk';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_41\").title('D.G.K.').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'dvs';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_6\").title('DVS Shoes').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'element';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_18\").title('Element').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'emerica';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_30\").title('Emerica').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'enjoi';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_42\").title('Enjoi').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'flip';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_7\").title('Flip').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'foundation';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_19\").title('Foundation').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'girl';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_31\").title('Girl').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'habitat';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_43\").title('Habitat').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'krooked';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_8\").title('Krooked').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'lakai';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_20\").title('Lakai').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'lurkville';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_33\").title('Lurkville').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'osiris';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_44\").title('Osiris Shoes').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'planb';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_21\").title('Plan B').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'polar';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_33\").title('Polar').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'pyramidcountry';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_45\").title('Pyramid Country').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'sk8mafia';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_10\").title('SK8MAFIA').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'pig';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_9\").title('Pig Wheels').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'slave';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_22\").title('$LAVE').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'stereo';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_34\").title('Stereo').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'supreme';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_46\").title('Supreme').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'thrasher';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_11\").title('Thrasher').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'toymachine';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_23\").title('Toy Machine').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'transworld';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_35\").title('Transworld').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'vans';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_47\").title('Vans').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'volcom';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_12\").title('Volcom').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'vox';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_24\").title('Vox Footwear').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'zero';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_36\").title('Zero').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.csv(\"assets/waffle.csv\", function (err, data) {\n    if (err) {\n      console.error(err);\n    } else {\n      var data = data.filter(function (d) {\n        return d.company == 'zooyork';\n      });\n      var waffle = new WaffleChart().selector(\".waffle_row_48\").title('Zoo York').data(data).useWidth(false).useLegend(false).size(5).gap(0).rows(20).columns(50).rounded(false)();\n    }\n  });\n\n  d3v3.select('.waffle_main_title').append('g').append(\"text\").attr(\"x\", window.innerWidth / 2).attr(\"y\", 0 - window.innerHeight / 11).style('color', 'black').style('font-size', '50px').style('text-align', 'center').text(\"Genre Distributions by Company\");\n}\n\nexports.default = { init: init, resize: resize };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ })
/******/ ]);